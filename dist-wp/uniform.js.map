{"version":3,"file":"./uniform.js","mappings":"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","sources":["webpack://uniform-ts/webpack/bootstrap","webpack://uniform-ts/webpack/runtime/import chunk loading","webpack://uniform-ts/./src/$core$/Interface/ObjectProxy.ts","webpack://uniform-ts/./src/$core$/Library/Handlers/RemoteHandler.ts","webpack://uniform-ts/./src/$core$/Library/Handlers/MemoryHandler.ts","webpack://uniform-ts/./src/$core$/Library/FLOW/ExChanger.ts","webpack://uniform-ts/./src/$core$/Library/Utils/SharedChannel.ts","webpack://uniform-ts/./src/$core$/Library/Utils/PromiseStack.ts","webpack://uniform-ts/./src/$core$/Library/FLOW/FLOW.ts","webpack://uniform-ts/./src/$core$/Library/PreCoding/TypeDetector.ts","webpack://uniform-ts/./src/$core$/Library/Handlers/UniversalHandler.ts","webpack://uniform-ts/./src/$core$/Library/PreCoding/PreCoding.ts","webpack://uniform-ts/./src/$core$/Library/FLOW/MessageChannel.ts","webpack://uniform-ts/./src/$core$/Library/Handlers/DataHandler.ts","webpack://uniform-ts/./src/$core$/Library/Handlers/PromiseHandler.ts","webpack://uniform-ts/./src/$core$/Library/Utils/Alias.ts","webpack://uniform-ts/./src/$core$/Library/Utils/InstructionType.ts","webpack://uniform-ts/./src/$core$/Library/Utils/OrganicType.ts","webpack://uniform-ts/./src/$core$/Library/Utils/UUIDMap.ts","webpack://uniform-ts/./src/$core$/Library/Utils/Useful.ts","webpack://uniform-ts/./src/$core$/Library/FLOW/ lazy ^.*$ namespace object","webpack://uniform-ts/./src/$core$/Workers/ lazy namespace object","webpack://uniform-ts/webpack/runtime/define property getters","webpack://uniform-ts/webpack/runtime/ensure chunk","webpack://uniform-ts/webpack/runtime/get javascript chunk filename","webpack://uniform-ts/webpack/runtime/hasOwnProperty shorthand","webpack://uniform-ts/webpack/runtime/make namespace object","webpack://uniform-ts/./src/$core$/Workers/MakeLoader.ts","webpack://uniform-ts/./src/$worker$/index.ts","webpack://uniform-ts/./src/$core$/Workers/ExChangerUnit.ts","webpack://uniform-ts/./src/$main$/index.ts","webpack://uniform-ts/./src/$main$/loader.ts"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\nvar installChunk = (data) => {\n\tvar {ids, modules, runtime} = data;\n\t// add \"modules\" to the modules object,\n\t// then flag all \"ids\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in modules) {\n\t\tif(__webpack_require__.o(modules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = modules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tfor(;i < ids.length; i++) {\n\t\tchunkId = ids[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[ids[i]] = 0;\n\t}\n\n}\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// import() chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[1]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = import(\"./\" + __webpack_require__.u(chunkId)).then(installChunk, (e) => {\n\t\t\t\t\t\tif(installedChunks[chunkId] !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t});\n\t\t\t\t\tvar promise = Promise.race([promise, new Promise((resolve) => (installedChunkData = installedChunks[chunkId] = [resolve]))])\n\t\t\t\t\tpromises.push(installedChunkData[1] = promise);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no external install chunk\n\n// no on chunks loaded","// deno-lint-ignore-file no-explicit-any ban-types no-explicit-any\nexport default class ObjectProxy {\n    #handlerUtils = {};\n    //\n    constructor(handlerUtils = {}) {\n        this.#handlerUtils = handlerUtils;\n    }\n    //\n    access(target, ...args) {\n        return this.#handlerUtils.$hnd(\"access\", target, ...args);\n    }\n    //\n    get(target, ...args) {\n        return this.#handlerUtils.$hnd(\"get\", target, ...args);\n    }\n    //\n    set(target, ...args) {\n        return this.#handlerUtils.$hnd(\"set\", target, ...args);\n    }\n    //\n    has(target, ...args) {\n        return this.#handlerUtils.$hnd(\"has\", target, ...args);\n    }\n    //\n    call(target, ...args) {\n        return this.#handlerUtils.$hnd(\"call\", target, ...args);\n    }\n    //\n    apply(target, ...args) {\n        return this.#handlerUtils.$hnd(\"apply\", target, ...args);\n    }\n    //\n    construct(target, ...args) {\n        return this.#handlerUtils.$hnd(\"construct\", target, ...args);\n    }\n    //\n    deleteProperty(target, ...args) {\n        return this.#handlerUtils.$hnd(\"deleteProperty\", target, ...args);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT2JqZWN0UHJveHkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJPYmplY3RQcm94eS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxrRUFBa0U7QUFDbEUsTUFBTSxDQUFDLE9BQU8sT0FBTyxXQUFXO0lBQzVCLGFBQWEsR0FBUSxFQUFFLENBQUM7SUFFeEIsRUFBRTtJQUNGLFlBQVksWUFBWSxHQUFHLEVBQUU7UUFDekIsSUFBSSxDQUFDLGFBQWEsR0FBRyxZQUFZLENBQUM7SUFDdEMsQ0FBQztJQUVELEVBQUU7SUFDRixNQUFNLENBQUMsTUFBUyxFQUFFLEdBQUcsSUFBZTtRQUNoQyxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxNQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsQ0FBQztJQUM5RCxDQUFDO0lBRUQsRUFBRTtJQUNGLEdBQUcsQ0FBQyxNQUFTLEVBQUUsR0FBRyxJQUFlO1FBQzdCLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDO0lBQzNELENBQUM7SUFFRCxFQUFFO0lBQ0YsR0FBRyxDQUFDLE1BQVMsRUFBRSxHQUFHLElBQWU7UUFDN0IsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUM7SUFDM0QsQ0FBQztJQUVELEVBQUU7SUFDRixHQUFHLENBQUMsTUFBUyxFQUFFLEdBQUcsSUFBZTtRQUM3QixPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxNQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsQ0FBQztJQUMzRCxDQUFDO0lBRUQsRUFBRTtJQUNGLElBQUksQ0FBQyxNQUFTLEVBQUUsR0FBRyxJQUFlO1FBQzlCLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDO0lBQzVELENBQUM7SUFFRCxFQUFFO0lBQ0YsS0FBSyxDQUFDLE1BQVMsRUFBRSxHQUFHLElBQWU7UUFDL0IsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUM7SUFDN0QsQ0FBQztJQUVELEVBQUU7SUFDRixTQUFTLENBQUMsTUFBUyxFQUFFLEdBQUcsSUFBZTtRQUNuQyxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxNQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsQ0FBQztJQUNqRSxDQUFDO0lBRUQsRUFBRTtJQUNGLGNBQWMsQ0FBQyxNQUFTLEVBQUUsR0FBRyxJQUFlO1FBQ3hDLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUM7SUFDdEUsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZGVuby1saW50LWlnbm9yZS1maWxlIG5vLWV4cGxpY2l0LWFueSBiYW4tdHlwZXMgbm8tZXhwbGljaXQtYW55XHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE9iamVjdFByb3h5PFQgZXh0ZW5kcyBvYmplY3R8RnVuY3Rpb24+IGltcGxlbWVudHMgUHJveHlIYW5kbGVyPFQ+IHtcclxuICAgICNoYW5kbGVyVXRpbHM6IGFueSA9IHt9O1xyXG5cclxuICAgIC8vXHJcbiAgICBjb25zdHJ1Y3RvcihoYW5kbGVyVXRpbHMgPSB7fSkge1xyXG4gICAgICAgIHRoaXMuI2hhbmRsZXJVdGlscyA9IGhhbmRsZXJVdGlscztcclxuICAgIH1cclxuXHJcbiAgICAvL1xyXG4gICAgYWNjZXNzKHRhcmdldDogVCwgLi4uYXJnczogdW5rbm93bltdKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuI2hhbmRsZXJVdGlscy4kaG5kKFwiYWNjZXNzXCIsIHRhcmdldCwgLi4uYXJncyk7XHJcbiAgICB9XHJcblxyXG4gICAgLy9cclxuICAgIGdldCh0YXJnZXQ6IFQsIC4uLmFyZ3M6IHVua25vd25bXSkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLiNoYW5kbGVyVXRpbHMuJGhuZChcImdldFwiLCB0YXJnZXQsIC4uLmFyZ3MpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vXHJcbiAgICBzZXQodGFyZ2V0OiBULCAuLi5hcmdzOiB1bmtub3duW10pIHtcclxuICAgICAgICByZXR1cm4gdGhpcy4jaGFuZGxlclV0aWxzLiRobmQoXCJzZXRcIiwgdGFyZ2V0LCAuLi5hcmdzKTtcclxuICAgIH1cclxuXHJcbiAgICAvL1xyXG4gICAgaGFzKHRhcmdldDogVCwgLi4uYXJnczogdW5rbm93bltdKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuI2hhbmRsZXJVdGlscy4kaG5kKFwiaGFzXCIsIHRhcmdldCwgLi4uYXJncyk7XHJcbiAgICB9XHJcblxyXG4gICAgLy9cclxuICAgIGNhbGwodGFyZ2V0OiBULCAuLi5hcmdzOiB1bmtub3duW10pIHtcclxuICAgICAgICByZXR1cm4gdGhpcy4jaGFuZGxlclV0aWxzLiRobmQoXCJjYWxsXCIsIHRhcmdldCwgLi4uYXJncyk7XHJcbiAgICB9XHJcblxyXG4gICAgLy9cclxuICAgIGFwcGx5KHRhcmdldDogVCwgLi4uYXJnczogdW5rbm93bltdKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuI2hhbmRsZXJVdGlscy4kaG5kKFwiYXBwbHlcIiwgdGFyZ2V0LCAuLi5hcmdzKTtcclxuICAgIH1cclxuXHJcbiAgICAvL1xyXG4gICAgY29uc3RydWN0KHRhcmdldDogVCwgLi4uYXJnczogdW5rbm93bltdKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuI2hhbmRsZXJVdGlscy4kaG5kKFwiY29uc3RydWN0XCIsIHRhcmdldCwgLi4uYXJncyk7XHJcbiAgICB9XHJcblxyXG4gICAgLy9cclxuICAgIGRlbGV0ZVByb3BlcnR5KHRhcmdldDogVCwgLi4uYXJnczogdW5rbm93bltdKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuI2hhbmRsZXJVdGlscy4kaG5kKFwiZGVsZXRlUHJvcGVydHlcIiwgdGFyZ2V0LCAuLi5hcmdzKTtcclxuICAgIH1cclxufVxyXG5cclxuIl19","// deno-lint-ignore-file no-explicit-any\nimport { isSymbol, FORBIDDEN_KEYS, META_KEYS } from \"../Utils/Useful\";\nimport { extract } from \"../Utils/InstructionType\";\nimport ORG from \"../Utils/OrganicType\";\n//\nimport DataHandler from \"./DataHandler\";\n//\nexport default class RemoteReferenceHandler extends DataHandler {\n    #exChanger;\n    //\n    constructor(exChanger) {\n        super();\n        this.#exChanger = exChanger;\n    }\n    //\n    get /*@__MANGLE_PROP__*/ $exc() { return this.#exChanger; }\n    //\n    /*@__MANGLE_PROP__*/ $data(t) { return extract(t) ?? t; }\n    /*@__MANGLE_PROP__*/ $hnd(cmd, meta, ...args) {\n        const data = this.$data(meta);\n        // return meta as is\n        if (cmd == \"get\") {\n            if (args[0] == ORG.data) {\n                return data;\n            }\n            ;\n            if (args[0] == ORG.exc) {\n                return this.$exc ?? data?.[ORG.exc] ?? data?.then?.((e) => e?.[ORG.exc]) ?? null;\n            }\n            ;\n            if ( // forbidden actions\n            isSymbol(args?.[0]) ||\n                FORBIDDEN_KEYS.has(args?.[0]) ||\n                META_KEYS.has?.(args?.[0])) {\n                return null;\n            }\n            ;\n        }\n        /*@__MANGLE_PROP__*/\n        return this.#exChanger?.$request(cmd, meta, args);\n    }\n    //\n    /*@__MANGLE_PROP__*/ $get(_) { return null; }\n    ;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVtb3RlSGFuZGxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlJlbW90ZUhhbmRsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsd0NBQXdDO0FBQ3hDLE9BQU8sRUFBRSxRQUFRLEVBQUUsY0FBYyxFQUFFLFNBQVMsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3RFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNuRCxPQUFPLEdBQUcsTUFBTSxzQkFBc0IsQ0FBQztBQUV2QyxFQUFFO0FBQ0YsT0FBTyxXQUFXLE1BQU0sZUFBZSxDQUFDO0FBRXhDLEVBQUU7QUFDRixNQUFNLENBQUMsT0FBTyxPQUFPLHNCQUF1QixTQUFRLFdBQVc7SUFDM0QsVUFBVSxDQUFXO0lBRXJCLEVBQUU7SUFDRixZQUFZLFNBQW1CO1FBQzNCLEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLFVBQVUsR0FBRyxTQUFTLENBQUM7SUFDaEMsQ0FBQztJQUVELEVBQUU7SUFDRixJQUFJLG9CQUFvQixDQUFDLElBQUksS0FBSyxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO0lBRTNELEVBQUU7SUFDRixvQkFBb0IsQ0FBQyxLQUFLLENBQUMsQ0FBVSxJQUFJLE9BQU8sT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDbEUsb0JBQW9CLENBQUMsSUFBSSxDQUFDLEdBQVcsRUFBRSxJQUFhLEVBQUUsR0FBRyxJQUFlO1FBQ3BFLE1BQU0sSUFBSSxHQUFRLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFbkMsb0JBQW9CO1FBQ3BCLElBQUksR0FBRyxJQUFJLEtBQUssRUFBRSxDQUFDO1lBQ2YsSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksR0FBRyxDQUFDLElBQUksRUFBRSxDQUFDO2dCQUFDLE9BQU8sSUFBSSxDQUFDO1lBQUMsQ0FBQztZQUFBLENBQUM7WUFDMUMsSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDO2dCQUFDLE9BQU8sSUFBSSxDQUFDLElBQUksSUFBSSxJQUFJLEVBQUUsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLElBQUksSUFBSSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBTSxFQUFDLEVBQUUsQ0FBQSxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUM7WUFBQyxDQUFDO1lBQUEsQ0FBQztZQUNqSCxLQUFLLG9CQUFvQjtZQUNyQixRQUFRLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ25CLGNBQWMsQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFXLENBQUM7Z0JBQ3ZDLFNBQVMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQVEsQ0FBQyxFQUNuQyxDQUFDO2dCQUFDLE9BQU8sSUFBSSxDQUFDO1lBQUMsQ0FBQztZQUFBLENBQUM7UUFDdkIsQ0FBQztRQUVELG9CQUFvQjtRQUNwQixPQUFPLElBQUksQ0FBQyxVQUFVLEVBQUUsUUFBUSxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDdEQsQ0FBQztJQUVELEVBQUU7SUFDRixvQkFBb0IsQ0FBQyxJQUFJLENBQUMsQ0FBc0IsSUFBUyxPQUFPLElBQUksQ0FBQyxDQUFDLENBQUM7SUFBQSxDQUFDO0NBQzNFIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZGVuby1saW50LWlnbm9yZS1maWxlIG5vLWV4cGxpY2l0LWFueVxyXG5pbXBvcnQgeyBpc1N5bWJvbCwgRk9SQklEREVOX0tFWVMsIE1FVEFfS0VZUyB9IGZyb20gXCIuLi9VdGlscy9Vc2VmdWxcIjtcclxuaW1wb3J0IHsgZXh0cmFjdCB9IGZyb20gXCIuLi9VdGlscy9JbnN0cnVjdGlvblR5cGVcIjtcclxuaW1wb3J0IE9SRyBmcm9tIFwiLi4vVXRpbHMvT3JnYW5pY1R5cGVcIjtcclxuXHJcbi8vXHJcbmltcG9ydCBEYXRhSGFuZGxlciBmcm9tIFwiLi9EYXRhSGFuZGxlclwiO1xyXG5cclxuLy9cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmVtb3RlUmVmZXJlbmNlSGFuZGxlciBleHRlbmRzIERhdGFIYW5kbGVyIHtcclxuICAgICNleENoYW5nZXI6IGFueXxudWxsO1xyXG5cclxuICAgIC8vXHJcbiAgICBjb25zdHJ1Y3RvcihleENoYW5nZXI6IGFueXxudWxsKXtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHRoaXMuI2V4Q2hhbmdlciA9IGV4Q2hhbmdlcjtcclxuICAgIH1cclxuXHJcbiAgICAvL1xyXG4gICAgZ2V0IC8qQF9fTUFOR0xFX1BST1BfXyovICRleGMoKSB7IHJldHVybiB0aGlzLiNleENoYW5nZXI7IH1cclxuXHJcbiAgICAvL1xyXG4gICAgLypAX19NQU5HTEVfUFJPUF9fKi8gJGRhdGEodDogdW5rbm93bikgeyByZXR1cm4gZXh0cmFjdCh0KSA/PyB0OyB9XHJcbiAgICAvKkBfX01BTkdMRV9QUk9QX18qLyAkaG5kKGNtZDogc3RyaW5nLCBtZXRhOiB1bmtub3duLCAuLi5hcmdzOiB1bmtub3duW10pIHtcclxuICAgICAgICBjb25zdCBkYXRhOiBhbnkgPSB0aGlzLiRkYXRhKG1ldGEpO1xyXG5cclxuICAgICAgICAvLyByZXR1cm4gbWV0YSBhcyBpc1xyXG4gICAgICAgIGlmIChjbWQgPT0gXCJnZXRcIikge1xyXG4gICAgICAgICAgICBpZiAoYXJnc1swXSA9PSBPUkcuZGF0YSkgeyByZXR1cm4gZGF0YTsgfTtcclxuICAgICAgICAgICAgaWYgKGFyZ3NbMF0gPT0gT1JHLmV4YykgeyByZXR1cm4gdGhpcy4kZXhjID8/IGRhdGE/LltPUkcuZXhjXSA/PyBkYXRhPy50aGVuPy4oKGU6IGFueSk9PmU/LltPUkcuZXhjXSkgPz8gbnVsbDsgfTtcclxuICAgICAgICAgICAgaWYgKCAvLyBmb3JiaWRkZW4gYWN0aW9uc1xyXG4gICAgICAgICAgICAgICAgaXNTeW1ib2woYXJncz8uWzBdKSB8fFxyXG4gICAgICAgICAgICAgICAgRk9SQklEREVOX0tFWVMuaGFzKGFyZ3M/LlswXSBhcyBzdHJpbmcpIHx8IFxyXG4gICAgICAgICAgICAgICAgTUVUQV9LRVlTLmhhcz8uKGFyZ3M/LlswXSBhcyBhbnkpXHJcbiAgICAgICAgICAgICkgeyByZXR1cm4gbnVsbDsgfTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8qQF9fTUFOR0xFX1BST1BfXyovXHJcbiAgICAgICAgcmV0dXJuIHRoaXMuI2V4Q2hhbmdlcj8uJHJlcXVlc3QoY21kLCBtZXRhLCBhcmdzKTtcclxuICAgIH1cclxuXHJcbiAgICAvL1xyXG4gICAgLypAX19NQU5HTEVfUFJPUF9fKi8gJGdldChfOiB1bmtub3dufHN0cmluZ3xudWxsKTogYW55IHsgcmV0dXJuIG51bGw7IH07XHJcbn1cclxuIl19","// deno-lint-ignore-file no-explicit-any\nimport UUIDMap from \"../Utils/UUIDMap\";\nimport { ORG } from \"../Utils/OrganicType\";\nimport { extract } from \"../Utils/InstructionType\";\n//\nimport DataHandler from \"./DataHandler\";\nexport default class ObjectPoolMemberHandler extends DataHandler {\n    #memoryPool;\n    //\n    constructor(memoryPool = new UUIDMap()) {\n        super();\n        this.#memoryPool = memoryPool;\n    }\n    // there is may not be meta object\n    /*@__MANGLE_PROP__*/ $data(t) {\n        return super.$data((() => {\n            const wrap = (extract(t) ?? t);\n            const uuid = wrap?.[ORG.uuid] ?? wrap ?? t;\n            if (typeof uuid == \"string\") {\n                return this.#memoryPool?.get(uuid) ?? t;\n            }\n            return t;\n        })());\n    }\n    //\n    /*@__MANGLE_PROP__*/ $get(t) {\n        const wrap = (extract(t) ?? t);\n        const uuid = (wrap?.[ORG.uuid] ?? wrap) ?? t;\n        if (typeof uuid == \"string\") {\n            return this.#memoryPool?.get(uuid);\n        }\n        return null;\n    }\n    ;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWVtb3J5SGFuZGxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIk1lbW9yeUhhbmRsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsd0NBQXdDO0FBQ3hDLE9BQU8sT0FBTyxNQUFNLGtCQUFrQixDQUFDO0FBQ3ZDLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTyxzQkFBc0IsQ0FBQztBQUM1QyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFFbkQsRUFBRTtBQUNGLE9BQU8sV0FBVyxNQUFNLGVBQWUsQ0FBQztBQUd4QyxNQUFNLENBQUMsT0FBTyxPQUFPLHVCQUF3QixTQUFRLFdBQVc7SUFDNUQsV0FBVyxDQUFpQjtJQUU1QixFQUFFO0lBQ0YsWUFBWSxhQUE2QixJQUFJLE9BQU8sRUFBRTtRQUNsRCxLQUFLLEVBQUUsQ0FBQztRQUNSLElBQUksQ0FBQyxXQUFXLEdBQUcsVUFBVSxDQUFDO0lBQ2xDLENBQUM7SUFFRCxrQ0FBa0M7SUFDbEMsb0JBQW9CLENBQUMsS0FBSyxDQUFDLENBQXNCO1FBQzdDLE9BQU8sS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUUsRUFBRTtZQUNwQixNQUFNLElBQUksR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQVEsQ0FBQztZQUN0QyxNQUFNLElBQUksR0FBSSxJQUFZLEVBQUUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsQ0FBQztZQUNwRCxJQUFJLE9BQU8sSUFBSSxJQUFJLFFBQVEsRUFBRSxDQUFDO2dCQUMxQixPQUFPLElBQUksQ0FBQyxXQUFXLEVBQUUsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUM1QyxDQUFDO1lBQ0QsT0FBTyxDQUFDLENBQUM7UUFDYixDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDVixDQUFDO0lBRUQsRUFBRTtJQUNGLG9CQUFvQixDQUFDLElBQUksQ0FBQyxDQUFzQjtRQUM1QyxNQUFNLElBQUksR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQVEsQ0FBQztRQUN0QyxNQUFNLElBQUksR0FBRyxDQUFFLElBQVksRUFBRSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQVcsSUFBSSxDQUFDLENBQUM7UUFDaEUsSUFBSSxPQUFPLElBQUksSUFBSSxRQUFRLEVBQUUsQ0FBQztZQUMxQixPQUFPLElBQUksQ0FBQyxXQUFXLEVBQUUsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3ZDLENBQUM7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBQUEsQ0FBQztDQUNMIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZGVuby1saW50LWlnbm9yZS1maWxlIG5vLWV4cGxpY2l0LWFueVxyXG5pbXBvcnQgVVVJRE1hcCBmcm9tIFwiLi4vVXRpbHMvVVVJRE1hcFwiO1xyXG5pbXBvcnQgeyBPUkcgfSAgZnJvbSBcIi4uL1V0aWxzL09yZ2FuaWNUeXBlXCI7XHJcbmltcG9ydCB7IGV4dHJhY3QgfSBmcm9tIFwiLi4vVXRpbHMvSW5zdHJ1Y3Rpb25UeXBlXCI7XHJcblxyXG4vL1xyXG5pbXBvcnQgRGF0YUhhbmRsZXIgZnJvbSBcIi4vRGF0YUhhbmRsZXJcIjtcclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBPYmplY3RQb29sTWVtYmVySGFuZGxlciBleHRlbmRzIERhdGFIYW5kbGVyIHtcclxuICAgICNtZW1vcnlQb29sOiBVVUlETWFwIHwgbnVsbDtcclxuXHJcbiAgICAvL1xyXG4gICAgY29uc3RydWN0b3IobWVtb3J5UG9vbDogVVVJRE1hcCB8IG51bGwgPSBuZXcgVVVJRE1hcCgpKXtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHRoaXMuI21lbW9yeVBvb2wgPSBtZW1vcnlQb29sO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIHRoZXJlIGlzIG1heSBub3QgYmUgbWV0YSBvYmplY3RcclxuICAgIC8qQF9fTUFOR0xFX1BST1BfXyovICRkYXRhKHQ6IHVua25vd258c3RyaW5nfG51bGwpOiBhbnkge1xyXG4gICAgICAgIHJldHVybiBzdXBlci4kZGF0YSgoKCk9PntcclxuICAgICAgICAgICAgY29uc3Qgd3JhcCA9IChleHRyYWN0KHQpID8/IHQpIGFzIGFueTtcclxuICAgICAgICAgICAgY29uc3QgdXVpZCA9ICh3cmFwIGFzIGFueSk/LltPUkcudXVpZF0gPz8gd3JhcCA/PyB0O1xyXG4gICAgICAgICAgICBpZiAodHlwZW9mIHV1aWQgPT0gXCJzdHJpbmdcIikge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuI21lbW9yeVBvb2w/LmdldCh1dWlkKSA/PyB0O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiB0O1xyXG4gICAgICAgIH0pKCkpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vXHJcbiAgICAvKkBfX01BTkdMRV9QUk9QX18qLyAkZ2V0KHQ6IHVua25vd258c3RyaW5nfG51bGwpOiBhbnkge1xyXG4gICAgICAgIGNvbnN0IHdyYXAgPSAoZXh0cmFjdCh0KSA/PyB0KSBhcyBhbnk7XHJcbiAgICAgICAgY29uc3QgdXVpZCA9ICgod3JhcCBhcyBhbnkpPy5bT1JHLnV1aWRdID8/IHdyYXApIGFzIHN0cmluZyA/PyB0O1xyXG4gICAgICAgIGlmICh0eXBlb2YgdXVpZCA9PSBcInN0cmluZ1wiKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLiNtZW1vcnlQb29sPy5nZXQodXVpZCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfTtcclxufVxyXG4iXX0=","// deno-lint-ignore-file no-explicit-any ban-types\nimport ObjectProxy from \"../../Interface/ObjectProxy\";\n//\nimport { doOnlyAfterResolve, isPromise, UUIDv4 } from \"../Utils/Useful\";\nimport { extract, MakeReference } from \"../Utils/InstructionType\";\n//\nimport RemoteReferenceHandler from \"../Handlers/RemoteHandler\";\nimport MemoryHandler from \"../Handlers/MemoryHandler\";\nimport DataHandler from \"../Handlers/DataHandler\";\nimport PromiseHandler from \"../Handlers/PromiseHandler\";\nimport FLOW from \"./FLOW\";\n//\nimport * as $M from \"./MessageChannel\";\nimport { ORG, bindWithContext } from \"../Utils/OrganicType\";\nimport { TS } from \"../Utils/Alias\";\n//\nexport default class ExChanger {\n    #flow = null;\n    #handler = null;\n    #memoryPool = null;\n    #coder = null;\n    //\n    constructor(context) {\n        if (typeof context != TS.udf && context != null) {\n            bindWithContext(context, this);\n            this.#flow = new FLOW(context);\n        }\n        else {\n            console.warn(\"Context not bounded!\");\n        }\n    }\n    //\n    initialize() {\n        if (this.#flow?.importToSelf?.($M) != null) {\n            this.#coder = this.#flow?.$imports?.$cd ?? this.#coder;\n            this.#memoryPool = this.#flow?.$imports?.$mp ?? this.#memoryPool;\n        }\n        else {\n            throw Error(\"Worker Engine Not Defined!\");\n        }\n        //\n        if ((this.#handler = (this.#flow?.$imports?.$dh ?? this.#handler)) != null) {\n            this.#handler?.$addHandler(\"loc\", new MemoryHandler(this.#memoryPool));\n            this.#handler?.$addHandler(\"rmt\", new RemoteReferenceHandler(this));\n            this.#handler?.$addHandler(\"pms\", new PromiseHandler());\n            this.#handler?.$addHandler(\"dir\", new DataHandler());\n        }\n        else {\n            throw Error(\"Invalid Native Module!\");\n        }\n        //\n        return this; //.sync();\n    }\n    //\n    get /*@__MANGLE_PROP__*/ $imports() { return this.#flow?.$imports || {}; }\n    get /*@__MANGLE_PROP__*/ /*@__PURE__*/ $sync() { return this.#flow?.sync?.(); }\n    async /*@__PURE__*/ sync() { await this.$sync; return this; }\n    //doOnlyAfterResolve\n    /*@__MANGLE_PROP__*/ $makePromise(target) {\n        //\n        try {\n            const ext = target?.[ORG.data] ?? target;\n            if (isPromise(target)) {\n                return (new Proxy(MakeReference(ext), new ObjectProxy(this.#handler?.$getHandler?.(\"pms\"))));\n            }\n            return target;\n        }\n        catch (e) {\n            console.error(e);\n            return null;\n        }\n        //return null;\n    }\n    //\n    /*@__MANGLE_PROP__*/ $act(result, cb) {\n        try {\n            return this.$makePromise(doOnlyAfterResolve(result, cb));\n        }\n        catch (e) {\n            console.error(e);\n            return null;\n        }\n    }\n    //\n    /*@__MANGLE_PROP__*/ $request(cmd, meta, args) {\n        const transfer = [];\n        const encoded = this.#coder?.encode([cmd, meta, ...args], transfer);\n        const result = this.#flow?.callTask?.(encoded, transfer);\n        //\n        try {\n            return this.$act(result, (res) => this.#coder?.decode?.(res, transfer));\n        }\n        catch (e) {\n            console.error(e);\n            return null;\n        }\n    }\n    //\n    //unwrap(obj) { return obj?.[$data] ?? obj; }\n    //local(name) { return wrapMeta({ORG.uuid: name, ORG.type: \"reference\"}, this.#handler); }\n    //\n    /*@__MANGLE_PROP__*/ $importToUnit(source) { return this.#flow?.importToUnit(source); }\n    /*@__MANGLE_PROP__*/ $importToSelf(module) { return this.#flow?.importToSelf(module); }\n    //\n    register(object, name = \"\") {\n        return this.#memoryPool?.add?.(object, name) || \"\";\n    }\n    //\n    access(name = \"\") {\n        const com = this.$request(\"access\", {\n            [ORG.type]: \"ref\",\n            [ORG.uuid]: name\n        }, []);\n        return com;\n    }\n    // lazy transfer (for passing as arguments)\n    transfer($node = null, name = \"\") {\n        return this.$act($node, (node) => {\n            const meta = extract(node);\n            const uuid = (name || meta?.[ORG.uuid] || UUIDv4());\n            const real = meta?.[ORG.node] ?? this.#memoryPool?.get?.(uuid) ?? node;\n            //\n            if (this.#handler) {\n                return new Proxy(MakeReference({\n                    [ORG.type]: \"tf\",\n                    [ORG.uuid]: uuid,\n                    [ORG.node]: real\n                }), new ObjectProxy(this.#handler));\n            }\n            //\n            return null;\n        });\n    }\n    // transfer from remote to host, or transfer actively (default is getter, setter/sender when has node argument)\n    doTransfer($name = \"\", node = null) {\n        return this.$act($name, (name) => {\n            return this.$act(node, (result) => {\n                // @ts-ignore \"sometimes, may got new UUID, or exists\"\n                const esm = extract(name);\n                // also you can do it with wrapped already (i.e. getting)\n                const meta = extract(result);\n                const uuid = (esm?.[ORG.uuid] || name || meta?.[ORG.uuid] || UUIDv4() || \"\");\n                const real = meta?.[ORG.node] ?? this.#memoryPool?.get?.(uuid) ?? result ?? esm?.[ORG.node];\n                // @ts-ignore \"make meta uuid equal\"\n                if (esm != null) {\n                    esm[ORG.uuid] = (uuid || \"\");\n                }\n                ; // assign uuid to meta\n                // @ts-ignore \"make meta uuid equal\"\n                if (meta != null) {\n                    meta[ORG.uuid] = (uuid || \"\");\n                }\n                ; // assign uuid to meta\n                // don't needs to transfer from remote\n                if (!result && real) {\n                    return real;\n                }\n                ;\n                // active transfer as argument to remote\n                result = (real != null ? this.$request(\"access\", {\n                    [ORG.type]: \"tf\",\n                    [ORG.uuid]: uuid,\n                    [ORG.node]: real\n                }, []) : this.$request(\"transfer\", (esm ?? {\n                    [ORG.type]: \"ref\",\n                    [ORG.uuid]: uuid\n                }), []));\n                //this.#flow?.sync?.();\n                return result;\n            });\n        });\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","// deno-lint-ignore-file ban-ts-comment no-explicit-any valid-typeof\nimport { TS, PMS } from \"./Alias\";\nimport { isPromise } from \"./Useful\";\n// @ts-ignore \"extra `KB` for library...\"\n/*@__PURE__*/\n//import * as cbor from \"cbor-x\";\n/*\n * Note about:\n * 0...3 byte: semaphore value\n * 4...7 byte: data length value\n * 8...N byte: data payload\n */\n/*@__MANGLE_PROP__*/ /*@__PURE__*/\nconst AT = typeof Atomics != TS.udf ? Atomics : {};\n/*@__MANGLE_PROP__*/ /*@__PURE__*/\nexport default class SharedChannel {\n    //[x: string]: (timeout?: number) => unknown; // @ts-ignore\n    #sharedBuffer = null;\n    #byteOffset = 0;\n    $binCoder = null;\n    constructor(sharedBuffer, byteOffset = 0, binCoder = null) {\n        this.#sharedBuffer = sharedBuffer;\n        this.#byteOffset = byteOffset;\n        this.$binCoder = binCoder;\n    }\n    //\n    /*@__PURE__*/ // @ts-ignore \"\"\n    /*@__MANGLE_PROP__*/ [TS.rv](object = {}) {\n        // @ts-ignore \"no valid type\"\n        /*@__PURE__*/\n        return this.$resolveWith(this.$binCoder?.encode?.(object ?? {}) ?? new Uint8Array([]));\n    }\n    //\n    /*@__PURE__*/ // @ts-ignore \"\"\n    /*@__MANGLE_PROP__*/ [TS.rj](e) { throw e; }\n    // @ts-ignore \"DOM isn't recognized\"\n    /*@__PURE__*/ waitAuto(timeout = 1000) { return (self?.document ? this.waitAsync(timeout) : this.waitSync(timeout)); }\n    /*@__PURE__*/ waitSync(timeout = 1000) { const result = this.$waitSync(timeout); return result ? this.$binCoder.decode(result ?? new Uint8Array([])) : null; }\n    // not implemented directly\n    /*@__PURE__*/ waitAsync(_timeout = 1000) { return null; }\n    ;\n    //\n    /*@__MANGLE_PROP__*/ $resolveWith(binaryData) {\n        if (this.#sharedBuffer) {\n            // grow when is possible...\n            if ((this.#sharedBuffer.byteLength - this.#byteOffset) < (binaryData.byteLength + 8)) {\n                // @ts-ignore\n                this.#sharedBuffer?.grow?.(this.#byteOffset + binaryData.byteLength + 8);\n            }\n            //\n            const int32 = new Int32Array(this.#sharedBuffer, this.#byteOffset, 2);\n            if (AT.load(int32, 0) != 0) {\n                new Uint8Array(this.#sharedBuffer, this.#byteOffset + 8, binaryData.byteLength).set(binaryData);\n                // resolve answer\n                AT.store(int32, 1, binaryData.byteLength);\n                // notify about results...\n                AT.store(int32, 0, 1);\n                AT.notify(int32, 0);\n                AT.store(int32, 0, 0);\n            }\n        }\n    }\n    /*@__MANGLE_PROP__*/ $initials() {\n        if (!this.#sharedBuffer)\n            return;\n        const int32 = new Int32Array(this.#sharedBuffer, this.#byteOffset, 2);\n        AT.store(int32, 1, 0);\n        AT.store(int32, 0, 1);\n    }\n    /*@__MANGLE_PROP__*/ $promised(timeout = 1000) {\n        if (!this.#sharedBuffer)\n            return; //\n        const int32 = new Int32Array(this.#sharedBuffer, this.#byteOffset, 2);\n        const promise = AT.waitAsync(int32, 0, 1, timeout)?.value;\n        // @ts-ignore\n        if (promise.async) {\n            // @ts-ignore\n            return promise?.then?.(() => {\n                if (this.#sharedBuffer) {\n                    return new Uint8Array(this.#sharedBuffer, this.#byteOffset + 8, int32[1]);\n                }\n                return null;\n            })?.catch?.(console.trace.bind(console));\n        }\n        //\n        return new PMS((_, rj) => rj(promise));\n    }\n    /*@__MANGLE_PROP__*/ $waitSync(timeout = 1000) {\n        if (!this.#sharedBuffer)\n            return; //\n        const int32 = new Int32Array(this.#sharedBuffer, this.#byteOffset, 2);\n        const result = AT.wait(int32, 0, 1, timeout);\n        if (result == \"ok\") {\n            return new Uint8Array(this.#sharedBuffer, this.#byteOffset + 8, int32[1]);\n        }\n        return null;\n    }\n}\n/*@__MANGLE_PROP__*/ /*@__PURE__*/\nexport const doOnlyAfterResolve = (meta, cb) => {\n    if (isPromise(meta)) {\n        const chain = meta?.then?.(cb)?.catch?.(console.trace.bind(console)) ?? cb(meta);\n        //console.trace(chain);\n        return chain;\n    }\n    /*@__MANGLE_PROP__*/ /*@__PURE__*/\n    if (typeof SharedChannel != TS.udf && meta instanceof SharedChannel) {\n        /*@__MANGLE_PROP__*/ /*@__PURE__*/\n        return /*@__MANGLE_PROP__*/ /*@__PURE__*/ doOnlyAfterResolve(meta?.waitAuto?.(), cb);\n    }\n    //\n    return cb(meta);\n};\n/*@__MANGLE_PROP__*/ /*@__PURE_*/\nSharedChannel.prototype.waitAsync = function (timeout = 1000) {\n    const result = /*@__MANGLE_PROP__*/ this.$promised(timeout);\n    return doOnlyAfterResolve(result, (bin) => {\n        return bin ? this.$binCoder?.decode?.(bin) : null;\n    });\n};\n//# sourceMappingURL=data:application/json;base64,","// deno-lint-ignore-file no-explicit-any\nimport { PMS, TS } from \"./Alias\";\nimport SharedChannel from \"./SharedChannel\";\nimport { UUIDv4 } from \"./Useful\";\n//\nexport const HANG_TIMEOUT = 2000;\nexport default class PromiseStack {\n    #map = new Map();\n    constructor() { this.#map = new Map(); }\n    //\n    get sync() { return this.#syncExcept(); }\n    #syncExcept(ne = \"\") { return PMS.allSettled(Array.from(this.#map?.entries?.())?.filter?.(([n]) => (ne != n))?.map?.((([, v]) => v))); }\n    //\n    get(name = \"\") { return this.#map.get(name); }\n    // reject by UUID\n    /*@__MANGLE_PROP__*/\n    [TS.rjb](name, why) {\n        const pm = this.#map.get(name);\n        this.#map.delete(name);\n        // @ts-ignore \"\"\n        pm?.[TS.rj]?.(why ?? null);\n        return this;\n    }\n    // resolve by UUID\n    /*@__MANGLE_PROP__*/\n    [TS.rvb](name, why) {\n        const pm = this.#map.get(name);\n        this.#map.delete(name);\n        // @ts-ignore \"\"\n        pm?.[TS.rv]?.(why ?? null);\n        return this;\n    }\n    /*@__MANGLE_PROP__*/ /*@__PURE__*/\n    hook(key = null, buffer = null) {\n        const pm = /*@__MANGLE_PROP__*/ new SharedChannel(buffer);\n        this.#map.set(key ||= UUIDv4(), pm);\n        // timeout of requests\n        /*@__MANGLE_PROP__*/ setTimeout(() => {\n            // @ts-ignore \"\"\n            if (this.#map.has(key)) {\n                this[TS.rjb](key, \"hang-timeout\");\n            }\n            ;\n        }, HANG_TIMEOUT);\n        //\n        return [key, pm, buffer];\n    }\n    // [\n    //  :0 - for sending UUID or identify\n    //  :1 - for waiting or async ops\n    // ]\n    [TS.cs](key = null) {\n        const bf = /*@__MANGLE_PROP__*/ new SharedArrayBuffer(16);\n        const pm = /*@__MANGLE_PROP__*/ new SharedChannel(bf);\n        this.#map.set(key ||= UUIDv4(), pm);\n        // timeout of requests\n        /*@__MANGLE_PROP__*/ setTimeout(() => {\n            // @ts-ignore \"\"\n            if (this.#map.has(key)) {\n                this[TS.rjb](key, \"hang-timeout\");\n            }\n            ;\n        }, HANG_TIMEOUT);\n        //\n        return [key, pm, bf];\n    }\n    // [\n    //  :0 - for sending UUID or identify\n    //  :1 - for waiting or async ops\n    // ]\n    [TS.cr](key = null) {\n        // @ts-ignore \"\"\n        const pm = PMS.withResolvers();\n        this.#map.set(key ||= UUIDv4(), pm);\n        // timeout of requests\n        /*@__MANGLE_PROP__*/ setTimeout(() => {\n            // @ts-ignore \"\"\n            if (this.#map.has(key)) {\n                this[TS.rjb](key, \"hang-timeout\");\n            }\n            ;\n        }, HANG_TIMEOUT);\n        //\n        return [key, pm.promise];\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","// deno-lint-ignore-file no-explicit-any\nimport { Transferable, doOnlyAfterResolve } from \"../Utils/Useful\";\nimport PromiseStack from '../Utils/PromiseStack';\nimport { TS } from \"../Utils/Alias\";\n//\n/*@__NOINLINE__*/ /*@__MANGLE_PROP__*/ /*@__PURE__*/ const PM = \"postMessage\";\n// FLOW - is web worker library core (low-level)...\nexport default class FLOW {\n    #worker = null;\n    #promiseStack = new PromiseStack();\n    #imports = {};\n    //\n    constructor(worker = null) {\n        this.#worker = worker; // || defaultWorker;\n        this.#imports = {};\n        //\n        (worker ??= this.#worker)?.addEventListener(\"message\", (ev) => {\n            if (!ev?.data) {\n                console.log(ev);\n                return;\n            }\n            const { cmd, uuid, dir, status, shared } = ev.data;\n            if (dir == \"req\") {\n                if (cmd == \"ping\") {\n                    worker?.[PM]?.({ cmd, uuid, dir: \"res\", status: \"ok\", result: \"ok\", shared: null });\n                }\n                else if (cmd == \"import\") {\n                    /*@__PURE__*/ import(/* @vite-ignore */ (\"\" + ev.data.source))?.then?.((m) => {\n                        Object.assign(this.#imports, (m.default ?? m));\n                        worker?.[PM]?.({ cmd, uuid, dir: \"res\", status: \"ok\", result: \"ok\", shared: null });\n                    })?.catch?.((e) => {\n                        /*@__PURE__*/ console.error(e);\n                        /*@__PURE__*/ console.trace(e);\n                        worker?.[PM]?.({ cmd, uuid, dir: \"res\", status: \"error\", result: \"unsupported\", shared: null });\n                    });\n                }\n                else if (cmd == \"call\") {\n                    // hoot shared channels for direct answer\n                    /*@__PURE__*/ (shared ? this.#promiseStack?.hook?.(uuid, shared) : null);\n                    // call with FLOW \"this\" context\n                    try {\n                        doOnlyAfterResolve(this.#imports[ev.data.handler]?.apply?.(self, [ev.data]) ?? ev.data.args, (syncOrAsync) => {\n                            doOnlyAfterResolve(syncOrAsync, (pass) => {\n                                const [$r, transfer] = pass;\n                                doOnlyAfterResolve($r, (result) => {\n                                    worker?.[PM]?.({\n                                        handler: \"$resolver\",\n                                        status: \"ok\",\n                                        cmd,\n                                        uuid,\n                                        dir: \"res\",\n                                        result,\n                                        shared\n                                    }, [...new Set(Array.from(transfer || []))].filter((e) => Transferable.some((I) => e instanceof I)));\n                                    // resolve when sync supported\n                                    // @ts-ignore \"\"\n                                    /*@__PURE__*/ this.#promiseStack?.[TS.rvb]?.(uuid, result);\n                                });\n                            });\n                        });\n                    }\n                    catch (e) {\n                        /*@__PURE__*/ console.error(e);\n                        /*@__PURE__*/ console.trace(e);\n                        //\n                        const reason = e.message;\n                        worker?.[PM]?.({\n                            handler: \"$resolver\",\n                            status: \"error\",\n                            cmd,\n                            uuid,\n                            dir: \"res\",\n                            result: reason,\n                            shared: null\n                        }, []);\n                        // resolve when sync supported\n                        // @ts-ignore \"\"\n                        /*@__PURE__*/ this.#promiseStack?.[TS.rjb]?.(uuid, reason);\n                    }\n                }\n                else {\n                    /*@__PURE__*/ console.error(\"Internal command: \" + cmd + \" not supported.\");\n                    worker?.[PM]?.({ cmd, uuid, dir: \"res\", status: \"error\", result: \"unk\" });\n                }\n            }\n            else if (dir == \"res\") {\n                try {\n                    const resolved = this.#imports?.[ev.data.handler]?.apply?.(self, [ev.data]) ?? (ev.data.result) ?? null;\n                    // @ts-ignore \"\"\n                    this.#promiseStack?.[status != \"error\" ? TS.rvb : TS.rjb]?.(uuid, resolved ?? null);\n                }\n                catch (e) {\n                    /*@__PURE__*/ console.error(e);\n                    /*@__PURE__*/ console.trace(e);\n                    // @ts-ignore \"\"\n                    this.#promiseStack?.[TS.rjb]?.(uuid, e?.message);\n                }\n            }\n        });\n    }\n    //\n    get /*@__MANGLE_PROP__*/ $imports() {\n        return this.#imports;\n    }\n    /*@__MANGLE_PROP__*/\n    importToSelf(module) {\n        Object.assign(this.#imports, (module)?.default ?? module);\n        return this;\n    }\n    /*@__PURE__*/ /*@__MANGLE_PROP__*/\n    importToUnit(source, sync = false) {\n        // @ts-ignore \"\"\n        /*@__PURE__*/ const pair = this.#promiseStack?.[sync ? TS.cs : TS.cr]?.();\n        /*@__PURE__*/ this.#worker?.[PM]?.({\n            status: \"pending\",\n            handler: \"$import\",\n            cmd: \"import\",\n            dir: \"req\",\n            shared: pair?.[2],\n            uuid: pair?.[0] || \"\",\n            source\n        });\n        return pair?.[1];\n    }\n    /*@__PURE__*/ /*@__MANGLE_PROP__*/\n    sync(sync = false) {\n        // @ts-ignore \"\"\n        const pair = this.#promiseStack?.[sync ? TS.cs : TS.cr]?.();\n        this.#worker?.[PM]?.({\n            status: \"pending\",\n            shared: pair?.[2],\n            handler: null,\n            cmd: \"ping\",\n            dir: \"req\",\n            uuid: pair?.[0] || \"\"\n        });\n        return pair?.[1];\n    }\n    /*@__PURE__*/ /*@__MANGLE_PROP__*/\n    callTask($args = [], transfer = [], sync = false) {\n        // @ts-ignore \"\"\n        const pair = this.#promiseStack?.[sync ? TS.cs : TS.cr]?.();\n        doOnlyAfterResolve($args, (args) => {\n            this.#worker?.[PM]?.({\n                status: \"pending\",\n                handler: \"$handler\",\n                cmd: \"call\",\n                dir: \"req\",\n                uuid: pair?.[0] || \"\",\n                shared: pair?.[2],\n                args\n            }, [...new Set(transfer || [])]);\n        });\n        return pair?.[1];\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","// deno-lint-ignore-file no-explicit-any\nimport TS from \"../Utils/Alias\";\nimport { extract } from \"../Utils/InstructionType\";\nimport { ORG, isPromise } from \"../Utils/Useful\";\n//\nexport default class TypeDetector {\n    /*@__MANGLE_PROP__*/ detection = new Map();\n    // we working only with unwrapped data, we doesn't accept any promise directly\n    constructor() {\n        //\n        /*@__MANGLE_PROP__*/ this.detection = new Map([\n            [\"p\", (a) => {\n                    return (typeof a != \"object\" && typeof a != \"function\" || typeof a == TS.udf || a == null);\n                }],\n            //\n            //[\"tf\", (a:any):boolean=>{\n            //return (a instanceof ArrayBuffer || a instanceof MessagePort || a instanceof ImageBitmap || a instanceof OffscreenCanvas || a instanceof ReadableStream || a instanceof WritableStream);\n            //}],\n            //\n            [\"a\", (a) => {\n                    /*@__MANGLE_PROP__*/\n                    return Array.isArray(a);\n                }],\n            //\n            [\"ab\", (a) => {\n                    /*@__MANGLE_PROP__*/\n                    return (a instanceof ArrayBuffer || (typeof SharedArrayBuffer != TS.udf && a instanceof SharedArrayBuffer));\n                }],\n            //\n            [\"ta\", (a) => {\n                    const $buffer = a?.buffer;\n                    /*@__MANGLE_PROP__*/\n                    return ($buffer instanceof ArrayBuffer || (typeof SharedArrayBuffer != TS.udf && $buffer instanceof SharedArrayBuffer));\n                }],\n            //\n            [\"pms\", (a) => {\n                    const valid = isPromise(a);\n                    if (valid) {\n                        console.warn(\"Potentially invalid type\");\n                        console.trace(a);\n                    }\n                    return valid;\n                }],\n            //\n            [\"sym\", (a) => {\n                    return typeof a === 'symbol' || typeof a === 'object' && Object.prototype.toString.call(a) === '[object Symbol]';\n                }],\n            // may needs to save into temp object pool for remote access\n            [\"ref\", (a) => {\n                    const fx = (typeof a == \"object\" || typeof a == \"function\");\n                    return fx;\n                }]\n        ]);\n    }\n    // [is organic, defined type]\n    /*@__MANGLE_PROP__*/ detectType(data, transfer = []) {\n        // are data meta type, skip definition\n        const organic = extract(data);\n        if (organic?.[ORG.type]) {\n            return [true, organic?.[ORG.type]];\n        }\n        else \n        //\n        if (transfer.indexOf(data) >= 0) {\n            return [false, \"tf\"];\n        }\n        // other data are primitives\n        for (const [type, def] of this.detection) {\n            if (def(data)) {\n                return [false, type];\n            }\n        }\n        //\n        return [false, \"unk\"];\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVHlwZURldGVjdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiVHlwZURldGVjdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdDQUF3QztBQUN4QyxPQUFPLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNoQyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDbkQsT0FBTyxFQUFFLEdBQUcsRUFBRSxTQUFTLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUVqRCxFQUFFO0FBQ0YsTUFBTSxDQUFDLE9BQU8sT0FBTyxZQUFZO0lBRTdCLG9CQUFvQixDQUFDLFNBQVMsR0FBdUMsSUFBSSxHQUFHLEVBQWlDLENBQUM7SUFFOUcsOEVBQThFO0lBQzlFO1FBQ0ksRUFBRTtRQUNGLG9CQUFvQixDQUFDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxHQUFHLENBQWdDO1lBQ3pFLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBVSxFQUFVLEVBQUU7b0JBQ3pCLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxRQUFRLElBQUksT0FBTyxDQUFDLElBQUksVUFBVSxJQUFJLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxDQUFDO2dCQUMvRixDQUFDLENBQUM7WUFFRixFQUFFO1lBQ0YsMkJBQTJCO1lBQ3ZCLDBMQUEwTDtZQUM5TCxLQUFLO1lBRUwsRUFBRTtZQUNGLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBVSxFQUFVLEVBQUU7b0JBQ3pCLG9CQUFvQjtvQkFDcEIsT0FBTyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUM1QixDQUFDLENBQUM7WUFFRixFQUFFO1lBQ0YsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFVLEVBQVUsRUFBRTtvQkFDMUIsb0JBQW9CO29CQUNwQixPQUFPLENBQUMsQ0FBQyxZQUFZLFdBQVcsSUFBSSxDQUFDLE9BQU8saUJBQWlCLElBQUksRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLFlBQVksaUJBQWlCLENBQUMsQ0FBQyxDQUFDO2dCQUNoSCxDQUFDLENBQUM7WUFFRixFQUFFO1lBQ0YsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFVLEVBQVUsRUFBRTtvQkFDMUIsTUFBTSxPQUFPLEdBQWEsQ0FBUyxFQUFFLE1BQU0sQ0FBQztvQkFDNUMsb0JBQW9CO29CQUNwQixPQUFPLENBQUMsT0FBTyxZQUFZLFdBQVcsSUFBSSxDQUFDLE9BQU8saUJBQWlCLElBQUksRUFBRSxDQUFDLEdBQUcsSUFBSSxPQUFPLFlBQVksaUJBQWlCLENBQUMsQ0FBQyxDQUFDO2dCQUM1SCxDQUFDLENBQUM7WUFFRixFQUFFO1lBQ0YsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUEyQixFQUFVLEVBQUU7b0JBQzVDLE1BQU0sS0FBSyxHQUFHLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDM0IsSUFBSSxLQUFLLEVBQUUsQ0FBQzt3QkFDUixPQUFPLENBQUMsSUFBSSxDQUFDLDBCQUEwQixDQUFDLENBQUM7d0JBQ3pDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQ3JCLENBQUM7b0JBQ0QsT0FBTyxLQUFLLENBQUM7Z0JBQ2pCLENBQUMsQ0FBQztZQUVGLEVBQUU7WUFDRixDQUFDLEtBQUssRUFBRSxDQUFDLENBQVUsRUFBVSxFQUFFO29CQUMzQixPQUFPLE9BQU8sQ0FBQyxLQUFLLFFBQVEsSUFBSSxPQUFPLENBQUMsS0FBSyxRQUFRLElBQUksTUFBTSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFFLENBQUMsQ0FBQyxLQUFLLGlCQUFpQixDQUFDO2dCQUN0SCxDQUFDLENBQUM7WUFFRiw0REFBNEQ7WUFDNUQsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFVLEVBQVUsRUFBRTtvQkFDM0IsTUFBTSxFQUFFLEdBQUcsQ0FBQyxPQUFPLENBQUMsSUFBSSxRQUFRLElBQUksT0FBTyxDQUFDLElBQUksVUFBVSxDQUFDLENBQUM7b0JBQzVELE9BQU8sRUFBRSxDQUFDO2dCQUNkLENBQUMsQ0FBQztTQUNMLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCw2QkFBNkI7SUFDN0Isb0JBQW9CLENBQUMsVUFBVSxDQUFDLElBQWEsRUFBRSxXQUFzQixFQUFFO1FBQ25FLHNDQUFzQztRQUN0QyxNQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFRLENBQUM7UUFDckMsSUFBSyxPQUFlLEVBQUUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQztZQUMvQixPQUFPLENBQUMsSUFBSSxFQUFHLE9BQWUsRUFBRSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQVcsQ0FBQyxDQUFDO1FBQzFELENBQUM7O1FBRUQsRUFBRTtRQUNGLElBQUksUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQztZQUM5QixPQUFPLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ3pCLENBQUM7UUFFRCw0QkFBNEI7UUFDNUIsS0FBSyxNQUFNLENBQUMsSUFBSSxFQUFFLEdBQUcsQ0FBQyxJQUFJLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztZQUN2QyxJQUFJLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDO2dCQUNaLE9BQU8sQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7WUFDekIsQ0FBQztRQUNMLENBQUM7UUFFRCxFQUFFO1FBQ0YsT0FBTyxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQztJQUMxQixDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBkZW5vLWxpbnQtaWdub3JlLWZpbGUgbm8tZXhwbGljaXQtYW55XHJcbmltcG9ydCBUUyBmcm9tIFwiLi4vVXRpbHMvQWxpYXNcIjtcclxuaW1wb3J0IHsgZXh0cmFjdCB9IGZyb20gXCIuLi9VdGlscy9JbnN0cnVjdGlvblR5cGVcIjtcclxuaW1wb3J0IHsgT1JHLCBpc1Byb21pc2UgfSBmcm9tIFwiLi4vVXRpbHMvVXNlZnVsXCI7XHJcblxyXG4vL1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUeXBlRGV0ZWN0b3Ige1xyXG4gICAgXHJcbiAgICAvKkBfX01BTkdMRV9QUk9QX18qLyBkZXRlY3Rpb246IE1hcDxzdHJpbmcsIChkOiB1bmtub3duKT0+Ym9vbGVhbj4gPSBuZXcgTWFwPHN0cmluZywgKGQ6IHVua25vd24pPT5ib29sZWFuPigpO1xyXG5cclxuICAgIC8vIHdlIHdvcmtpbmcgb25seSB3aXRoIHVud3JhcHBlZCBkYXRhLCB3ZSBkb2Vzbid0IGFjY2VwdCBhbnkgcHJvbWlzZSBkaXJlY3RseVxyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgLy9cclxuICAgICAgICAvKkBfX01BTkdMRV9QUk9QX18qLyB0aGlzLmRldGVjdGlvbiA9IG5ldyBNYXA8c3RyaW5nLCAoZDogdW5rbm93bik9PmJvb2xlYW4+KFtcclxuICAgICAgICAgICAgW1wicFwiLCAoYTogdW5rbm93bik6IGJvb2xlYW49PntcclxuICAgICAgICAgICAgICAgIHJldHVybiAodHlwZW9mIGEgIT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgYSAhPSBcImZ1bmN0aW9uXCIgfHwgdHlwZW9mIGEgPT0gVFMudWRmIHx8IGEgPT0gbnVsbCk7XHJcbiAgICAgICAgICAgIH1dLFxyXG5cclxuICAgICAgICAgICAgLy9cclxuICAgICAgICAgICAgLy9bXCJ0ZlwiLCAoYTphbnkpOmJvb2xlYW49PntcclxuICAgICAgICAgICAgICAgIC8vcmV0dXJuIChhIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIgfHwgYSBpbnN0YW5jZW9mIE1lc3NhZ2VQb3J0IHx8IGEgaW5zdGFuY2VvZiBJbWFnZUJpdG1hcCB8fCBhIGluc3RhbmNlb2YgT2Zmc2NyZWVuQ2FudmFzIHx8IGEgaW5zdGFuY2VvZiBSZWFkYWJsZVN0cmVhbSB8fCBhIGluc3RhbmNlb2YgV3JpdGFibGVTdHJlYW0pO1xyXG4gICAgICAgICAgICAvL31dLFxyXG5cclxuICAgICAgICAgICAgLy9cclxuICAgICAgICAgICAgW1wiYVwiLCAoYTogdW5rbm93bik6IGJvb2xlYW49PntcclxuICAgICAgICAgICAgICAgIC8qQF9fTUFOR0xFX1BST1BfXyovIFxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkoYSk7XHJcbiAgICAgICAgICAgIH1dLFxyXG5cclxuICAgICAgICAgICAgLy9cclxuICAgICAgICAgICAgW1wiYWJcIiwgKGE6IHVua25vd24pOiBib29sZWFuPT57XHJcbiAgICAgICAgICAgICAgICAvKkBfX01BTkdMRV9QUk9QX18qLyBcclxuICAgICAgICAgICAgICAgIHJldHVybiAoYSBpbnN0YW5jZW9mIEFycmF5QnVmZmVyIHx8ICh0eXBlb2YgU2hhcmVkQXJyYXlCdWZmZXIgIT0gVFMudWRmICYmIGEgaW5zdGFuY2VvZiBTaGFyZWRBcnJheUJ1ZmZlcikpO1xyXG4gICAgICAgICAgICB9XSxcclxuXHJcbiAgICAgICAgICAgIC8vXHJcbiAgICAgICAgICAgIFtcInRhXCIsIChhOiB1bmtub3duKTogYm9vbGVhbj0+e1xyXG4gICAgICAgICAgICAgICAgY29uc3QgJGJ1ZmZlcjogdW5rbm93biA9IChhIGFzIGFueSk/LmJ1ZmZlcjtcclxuICAgICAgICAgICAgICAgIC8qQF9fTUFOR0xFX1BST1BfXyovIFxyXG4gICAgICAgICAgICAgICAgcmV0dXJuICgkYnVmZmVyIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIgfHwgKHR5cGVvZiBTaGFyZWRBcnJheUJ1ZmZlciAhPSBUUy51ZGYgJiYgJGJ1ZmZlciBpbnN0YW5jZW9mIFNoYXJlZEFycmF5QnVmZmVyKSk7XHJcbiAgICAgICAgICAgIH1dLFxyXG5cclxuICAgICAgICAgICAgLy9cclxuICAgICAgICAgICAgW1wicG1zXCIsIChhOiB1bmtub3dufFByb21pc2U8dW5rbm93bj4pOiBib29sZWFuPT57XHJcbiAgICAgICAgICAgICAgICBjb25zdCB2YWxpZCA9IGlzUHJvbWlzZShhKTtcclxuICAgICAgICAgICAgICAgIGlmICh2YWxpZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihcIlBvdGVudGlhbGx5IGludmFsaWQgdHlwZVwiKTtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLnRyYWNlKGEpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbGlkO1xyXG4gICAgICAgICAgICB9XSxcclxuXHJcbiAgICAgICAgICAgIC8vXHJcbiAgICAgICAgICAgIFtcInN5bVwiLCAoYTogdW5rbm93bik6IGJvb2xlYW49PntcclxuICAgICAgICAgICAgICAgIHJldHVybiB0eXBlb2YgYSA9PT0gJ3N5bWJvbCcgfHwgdHlwZW9mIGEgPT09ICdvYmplY3QnICYmIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCAoYSkgPT09ICdbb2JqZWN0IFN5bWJvbF0nO1xyXG4gICAgICAgICAgICB9XSxcclxuXHJcbiAgICAgICAgICAgIC8vIG1heSBuZWVkcyB0byBzYXZlIGludG8gdGVtcCBvYmplY3QgcG9vbCBmb3IgcmVtb3RlIGFjY2Vzc1xyXG4gICAgICAgICAgICBbXCJyZWZcIiwgKGE6IHVua25vd24pOiBib29sZWFuPT57XHJcbiAgICAgICAgICAgICAgICBjb25zdCBmeCA9ICh0eXBlb2YgYSA9PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBhID09IFwiZnVuY3Rpb25cIik7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZng7XHJcbiAgICAgICAgICAgIH1dXHJcbiAgICAgICAgXSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gW2lzIG9yZ2FuaWMsIGRlZmluZWQgdHlwZV1cclxuICAgIC8qQF9fTUFOR0xFX1BST1BfXyovIGRldGVjdFR5cGUoZGF0YTogdW5rbm93biwgdHJhbnNmZXI6IHVua25vd25bXSA9IFtdKTogW2Jvb2xlYW4sIHN0cmluZ10ge1xyXG4gICAgICAgIC8vIGFyZSBkYXRhIG1ldGEgdHlwZSwgc2tpcCBkZWZpbml0aW9uXHJcbiAgICAgICAgY29uc3Qgb3JnYW5pYyA9IGV4dHJhY3QoZGF0YSkgYXMgYW55O1xyXG4gICAgICAgIGlmICgob3JnYW5pYyBhcyBhbnkpPy5bT1JHLnR5cGVdKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBbdHJ1ZSwgKG9yZ2FuaWMgYXMgYW55KT8uW09SRy50eXBlXSBhcyBzdHJpbmddO1xyXG4gICAgICAgIH0gZWxzZVxyXG5cclxuICAgICAgICAvL1xyXG4gICAgICAgIGlmICh0cmFuc2Zlci5pbmRleE9mKGRhdGEpID49IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuIFtmYWxzZSwgXCJ0ZlwiXTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIG90aGVyIGRhdGEgYXJlIHByaW1pdGl2ZXNcclxuICAgICAgICBmb3IgKGNvbnN0IFt0eXBlLCBkZWZdIG9mIHRoaXMuZGV0ZWN0aW9uKSB7XHJcbiAgICAgICAgICAgIGlmIChkZWYoZGF0YSkpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBbZmFsc2UsIHR5cGVdO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvL1xyXG4gICAgICAgIHJldHVybiBbZmFsc2UsIFwidW5rXCJdO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==","// deno-lint-ignore-file no-explicit-any\nimport ObjectProxy from \"../../Interface/ObjectProxy\";\n//\nimport { FORBIDDEN_KEYS, META_KEYS, isSymbol, doOnlyAfterResolve, isPromise } from \"../Utils/Useful\";\nimport { extract, MakeReference, wrapWeakMap } from \"../Utils/InstructionType\";\nimport { ORG } from \"../Utils/OrganicType\";\n//\nimport DataHandler from \"./DataHandler\";\n//\nexport default class UniversalHandler extends DataHandler {\n    #dataHandler;\n    //\n    constructor(dataHandler = new Map()) {\n        super();\n        this.#dataHandler = dataHandler;\n    }\n    //\n    get /*@__MANGLE_PROP__*/ $exc() { return this.#dataHandler?.get?.(\"rmt\")?.$exc; }\n    //\n    /*@__MANGLE_PROP__*/ $data(t) {\n        return t?.[ORG.data] ?? t;\n    }\n    //\n    /*@__MANGLE_PROP__*/ $addHandler(name, handler) { this.#dataHandler.set(name, handler); }\n    /*@__MANGLE_PROP__*/ $getHandler(name) { return this.#dataHandler.get(name); }\n    //\n    /*@__MANGLE_PROP__*/ $hnd(cmd = \"access\", t, ...args) {\n        const data = this.$data(t);\n        // isn't promise itself\n        if (cmd == \"get\") {\n            if (args[0] == ORG.data) {\n                return data;\n            }\n            ;\n            if (args[0] == ORG.exc) {\n                return this.$exc ?? data?.[ORG.exc] ?? data?.then?.((e) => e?.[ORG.exc]) ?? null;\n            }\n            ;\n            if ( // forbidden actions\n            isSymbol(args?.[0]) ||\n                FORBIDDEN_KEYS.has(args?.[0]) ||\n                META_KEYS.has?.(args?.[0])) {\n                return null;\n            }\n            ;\n        }\n        //\n        let htp = \"dir\";\n        if (isPromise(data)) {\n            htp = \"pms\";\n        }\n        else {\n            const meta = extract(t), local = this.$get(meta);\n            const overlap = extract(local)?.[ORG.uuid] == meta?.[ORG.uuid];\n            //\n            if (typeof meta?.[ORG.type] == \"string\") {\n                htp = \"loc\";\n            }\n            if (typeof meta?.[ORG.uuid] == \"string\" && (!local || overlap)) {\n                htp = \"rmt\";\n            }\n        }\n        //\n        return this.#dataHandler?.get(htp)?.$hnd?.(cmd, t, ...args);\n    }\n    //\n    /*@__MANGLE_PROP__*/ $get(uuid) { return this.#dataHandler.get(\"loc\")?.$get?.(uuid); }\n    ;\n}\n//\nexport const wrapMeta = (meta, handler = null) => {\n    if (!(typeof meta == \"object\" || typeof meta == \"function\"))\n        return meta;\n    //\n    const wrap = (!meta?.[ORG.data]) ? (new Proxy(MakeReference(meta), new ObjectProxy(handler || new UniversalHandler()))) : meta;\n    doOnlyAfterResolve(meta, ($m) => {\n        if ($m) {\n            doOnlyAfterResolve(wrap, (w) => {\n                if (w != null && (typeof w == \"object\" || typeof w == \"function\")) {\n                    const organic = (wrapWeakMap.get(w) ?? w);\n                    const pt = organic?.[ORG.data] ?? organic;\n                    if (pt?.[ORG.uuid] || pt?.[ORG.type]) {\n                        wrapWeakMap.set(w, pt);\n                    }\n                    ;\n                }\n            });\n        }\n        ;\n    });\n    return wrap;\n};\n//# sourceMappingURL=data:application/json;base64,","// deno-lint-ignore-file no-explicit-any\n// Will be used when result are predictable in the pools or return results\nimport UUIDMap from \"../Utils/UUIDMap\";\nimport TypeDetector from \"./TypeDetector\";\nimport UniversalHandler from \"../Handlers/UniversalHandler\";\nimport { isPromise, doOnlyAfterResolve } from \"../Utils/Useful\";\nimport { extract } from \"../Utils/InstructionType\";\nimport { wrapMeta } from \"../Handlers/UniversalHandler\";\nimport ORG from \"../Utils/OrganicType\";\nimport { PMS, TS } from \"../Utils/Alias\";\n/*@__MANGLE_PROP__*/ /*@__PURE__*/\nexport const hasMemoryBuffer = (target) => {\n    // shared array buffer are not transfer, it's sharing\n    return (target?.buffer instanceof ArrayBuffer) || (typeof SharedArrayBuffer != TS.udf && target?.buffer instanceof SharedArrayBuffer);\n};\n/*@__MANGLE_PROP__*/ /*@__PURE__*/\nexport default class PreCoding {\n    /*@__MANGLE_PROP__*/ $encoder = new Map();\n    /*@__MANGLE_PROP__*/ $decoder = new Map();\n    /*@__MANGLE_PROP__*/ $mp = new UUIDMap();\n    /*@__MANGLE_PROP__*/ $hndr = new UniversalHandler();\n    /*@__MANGLE_PROP__*/ $typeDetector = new TypeDetector();\n    //\n    constructor(memoryPool = new UUIDMap()) {\n        /*@__MANGLE_PROP__*/\n        this.$mp = memoryPool;\n        /*@__MANGLE_PROP__*/\n        this.$encoder = new Map([\n            [\"a\", (organic, target, transfer = []) => {\n                    if (!organic) {\n                        const encoded = Array.from(target || []).map((e) => this.encode(e, transfer));\n                        return encoded.some(isPromise) ? PMS.all(encoded) : encoded;\n                    }\n                    return target;\n                }],\n            //\n            [\"tf\", (organic, target, transfer = []) => {\n                    if (!organic) {\n                        // non-organic just to transfer\n                        if (transfer?.indexOf?.(target) < 0 && target != null) {\n                            const uuid = (this.$mp.get(target) || \"\");\n                            this.$mp.delete(target);\n                            // if is typed arrays, they also can be transferred by their buffers\n                            // do not transfer shared buffers, but we not detecting as transfer initially\n                            const toTransfer = hasMemoryBuffer(target) ? (target?.buffer ?? target) : target;\n                            if (toTransfer != null) {\n                                transfer?.push?.(toTransfer);\n                            }\n                            ;\n                            // for those who will ask where is original\n                            if (uuid) {\n                                //const meta = {[ORG.type]: \"reference\", [ORG.uuid]: uuid} as IMeta;\n                                // @ts-ignore \"\"\n                                //meta[ORG.uuid] = this.$mp.add(wrapMeta(meta, this.$hndr) as object, meta[ORG.uuid] = uuid, true);\n                                // export as organic transfer\n                                return {\n                                    [ORG.type]: \"tf\",\n                                    [ORG.uuid]: uuid,\n                                    [ORG.node]: toTransfer\n                                };\n                            }\n                        }\n                        ;\n                    }\n                    else {\n                        // transfers only when is exists\n                        const org = (extract(target) || {});\n                        const node = org?.[ORG.node] ?? this?.$mp?.get(org?.[ORG.uuid]);\n                        // if exists\n                        if (node != null) {\n                            // sometimes, `@uuid` may already known in database\n                            const uuid = (org?.[ORG.uuid] || this?.$mp?.get?.(node) || \"\");\n                            const meta = {\n                                [ORG.type]: \"tf\",\n                                [ORG.uuid]: uuid,\n                                [ORG.node]: node\n                            };\n                            // add to transfer list (do not transfer shared buffers)\n                            // but if transferred to another external worker, should be here an reference\n                            if (node != null && transfer?.indexOf?.(node) < 0) {\n                                this.$mp.delete(node);\n                                transfer?.push?.(hasMemoryBuffer(node) ? (node?.buffer ?? node) : node);\n                            }\n                            // doesn't holding it anymore\n                            if (org != null && uuid) {\n                                // @ts-ignore \"\"\n                                org[ORG.type] = \"ref\";\n                                // @ts-ignore \"\"\n                                org[ORG.node] = null;\n                                // @ts-ignore \"for who will asking where was transferred\"\n                                //org[ORG.uuid] = this.$mp.add(wrapMeta(org, this.$hndr), org[ORG.uuid] = uuid, true) as string;\n                            }\n                            ;\n                            //\n                            return meta;\n                        }\n                        //\n                        return org;\n                    }\n                    // return as regular\n                    return target;\n                }],\n            //\n            [\"ref\", (organic, target, _transfer = []) => {\n                    if (!organic || target?.[ORG.data]) {\n                        const ext = extract(target)?.[ORG.uuid];\n                        const exists = this?.$mp?.get(ext) ?? target;\n                        const meta = {\n                            [ORG.type]: \"ref\",\n                            [ORG.uuid]: this.$mp.add(exists, ext, !organic)\n                        };\n                        return meta;\n                    }\n                    return target;\n                }]\n        ]);\n        /*@__MANGLE_PROP__*/\n        this.$decoder = new Map([\n            [\"a\", (organic, target, transfer = []) => {\n                    if (!organic) {\n                        const decoded = Array.from(target).map((e) => this.decode(e, transfer));\n                        return decoded.some(isPromise) ? PMS.all(decoded) : decoded;\n                    }\n                    // unusual\n                    return target;\n                }],\n            //\n            [\"tf\", (organic, target, _transfer = []) => {\n                    if (organic) {\n                        // reformat transfer type, add to registry\n                        const org = extract(target);\n                        const node = (org?.[ORG.node]) ?? this?.$mp?.get(org?.[ORG.uuid]);\n                        // unable to override exists\n                        if (node != null) {\n                            // @ts-ignore \"assign\"\n                            org[ORG.uuid] = this.$mp.add(node, org?.[ORG.uuid], organic);\n                            // @ts-ignore \"assign\"\n                            org[ORG.type] = \"ref\";\n                        }\n                        ;\n                        // but if transferred to another external worker, should be here an reference\n                        return node ?? wrapMeta(org, this.$hndr);\n                    }\n                    return target;\n                }],\n            //\n            [\"ref\", (organic, target, _transfer = []) => {\n                    if (organic) {\n                        const org = extract(target);\n                        const exists = this?.$mp?.get(org?.[ORG.uuid]);\n                        return exists ?? wrapMeta(org, this.$hndr);\n                    }\n                    // unusual\n                    return target;\n                }]\n        ]);\n    }\n    //\n    /*@__MANGLE_PROP__*/ $decode(target, transfer = []) {\n        const [o, t] = this.$typeDetector.detectType(target, transfer);\n        if (this.$decoder.has(t)) {\n            return this.$decoder.get(t)?.(o, target, transfer) ?? target;\n        }\n        return target;\n    }\n    //\n    /*@__MANGLE_PROP__*/ $encode(target, transfer = []) {\n        const [o, t] = this.$typeDetector.detectType(target, transfer);\n        if (this.$encoder.has(t)) {\n            return this.$encoder.get(t)?.(o, target, transfer) ?? target;\n        }\n        return target;\n    }\n    //\n    /*@__MANGLE_PROP__*/ decode(target, transfer = []) {\n        return doOnlyAfterResolve(target, (e) => this.$decode(e, transfer));\n    }\n    //\n    /*@__MANGLE_PROP__*/ encode(target, transfer = []) {\n        return doOnlyAfterResolve(target, (e) => this.$encode(e, transfer));\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","// deno-lint-ignore-file no-explicit-any\nimport PreCoding from \"../PreCoding/PreCoding\";\nimport { doOnlyAfterResolve } from \"../Utils/Useful\";\n//\n/*@__MANGLE_PROP__*/ export const $cd = new PreCoding();\n/*@__MANGLE_PROP__*/ export const $mp = $cd.$mp;\n/*@__MANGLE_PROP__*/ export const $dh = $cd.$hndr;\n//\nexport const $handler = (command) => {\n    const { args: [cmd, target, ...args] } = command;\n    //\n    const transfer = [];\n    if (cmd == \"apply\" && args.length >= 3) {\n        transfer.push(...args.splice(2));\n    }\n    // before you needs decode its\n    return doOnlyAfterResolve($cd.decode([cmd, target, ...args], transfer), ([cmd, target, ...args]) => {\n        const result = $dh?.$getHandler?.(\"pms\")?.$hnd?.(cmd, target, ...args);\n        const ready = $cd.encode(result, transfer);\n        return [ready, transfer]; // also, needs to recode back\n    });\n};\nexport const $resolver = (command) => (command.result);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWVzc2FnZUNoYW5uZWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJNZXNzYWdlQ2hhbm5lbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3Q0FBd0M7QUFDeEMsT0FBTyxTQUFTLE1BQU0sd0JBQXdCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFckQsRUFBRTtBQUNGLG9CQUFvQixDQUFDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsR0FBRyxJQUFJLFNBQVMsRUFBRSxDQUFDO0FBQ3hELG9CQUFvQixDQUFDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDO0FBQ2hELG9CQUFvQixDQUFDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDO0FBRWxELEVBQUU7QUFDRixNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsQ0FBQyxPQUFZLEVBQUUsRUFBRTtJQUNyQyxNQUFNLEVBQUMsSUFBSSxFQUFFLENBQUMsR0FBRyxFQUFFLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxFQUFDLEdBQUcsT0FBTyxDQUFDO0lBRS9DLEVBQUU7SUFDRixNQUFNLFFBQVEsR0FBYyxFQUFFLENBQUM7SUFDL0IsSUFBSSxHQUFHLElBQUksT0FBTyxJQUFJLElBQUksQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFFLENBQUM7UUFBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQUMsQ0FBQztJQUU3RSw4QkFBOEI7SUFDOUIsT0FBTyxrQkFBa0IsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxFQUFFLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxFQUFFLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHLEVBQUUsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLEVBQUMsRUFBRTtRQUM5RixNQUFNLE1BQU0sR0FBRyxHQUFHLEVBQUUsV0FBVyxFQUFFLENBQUMsS0FBSyxDQUFDLEVBQUUsSUFBSSxFQUFFLENBQUMsR0FBRyxFQUFFLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDO1FBQ3ZFLE1BQU0sS0FBSyxHQUFJLEdBQUcsQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBQzVDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsUUFBUSxDQUFDLENBQUEsQ0FBQyw2QkFBNkI7SUFDMUQsQ0FBQyxDQUFDLENBQUM7QUFDUCxDQUFDLENBQUE7QUFDRCxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsQ0FBQyxPQUFZLEVBQUUsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZGVuby1saW50LWlnbm9yZS1maWxlIG5vLWV4cGxpY2l0LWFueVxyXG5pbXBvcnQgUHJlQ29kaW5nIGZyb20gXCIuLi9QcmVDb2RpbmcvUHJlQ29kaW5nXCI7XHJcbmltcG9ydCB7IGRvT25seUFmdGVyUmVzb2x2ZSB9IGZyb20gXCIuLi9VdGlscy9Vc2VmdWxcIjtcclxuXHJcbi8vXHJcbi8qQF9fTUFOR0xFX1BST1BfXyovIGV4cG9ydCBjb25zdCAkY2QgPSBuZXcgUHJlQ29kaW5nKCk7XHJcbi8qQF9fTUFOR0xFX1BST1BfXyovIGV4cG9ydCBjb25zdCAkbXAgPSAkY2QuJG1wO1xyXG4vKkBfX01BTkdMRV9QUk9QX18qLyBleHBvcnQgY29uc3QgJGRoID0gJGNkLiRobmRyO1xyXG5cclxuLy9cclxuZXhwb3J0IGNvbnN0ICRoYW5kbGVyID0gKGNvbW1hbmQ6IGFueSkgPT4ge1xyXG4gICAgY29uc3Qge2FyZ3M6IFtjbWQsIHRhcmdldCwgLi4uYXJnc119ID0gY29tbWFuZDtcclxuXHJcbiAgICAvL1xyXG4gICAgY29uc3QgdHJhbnNmZXI6IHVua25vd25bXSA9IFtdO1xyXG4gICAgaWYgKGNtZCA9PSBcImFwcGx5XCIgJiYgYXJncy5sZW5ndGggPj0gMykgeyB0cmFuc2Zlci5wdXNoKC4uLmFyZ3Muc3BsaWNlKDIpKTsgfVxyXG5cclxuICAgIC8vIGJlZm9yZSB5b3UgbmVlZHMgZGVjb2RlIGl0c1xyXG4gICAgcmV0dXJuIGRvT25seUFmdGVyUmVzb2x2ZSgkY2QuZGVjb2RlKFtjbWQsIHRhcmdldCwgLi4uYXJnc10sIHRyYW5zZmVyKSwgKFtjbWQsIHRhcmdldCwgLi4uYXJnc10pPT57XHJcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gJGRoPy4kZ2V0SGFuZGxlcj8uKFwicG1zXCIpPy4kaG5kPy4oY21kLCB0YXJnZXQsIC4uLmFyZ3MpO1xyXG4gICAgICAgIGNvbnN0IHJlYWR5ICA9ICRjZC5lbmNvZGUocmVzdWx0LCB0cmFuc2Zlcik7XHJcbiAgICAgICAgcmV0dXJuIFtyZWFkeSwgdHJhbnNmZXJdIC8vIGFsc28sIG5lZWRzIHRvIHJlY29kZSBiYWNrXHJcbiAgICB9KTtcclxufVxyXG5leHBvcnQgY29uc3QgJHJlc29sdmVyID0gKGNvbW1hbmQ6IGFueSkgPT4gKGNvbW1hbmQucmVzdWx0KTtcclxuIl19","// deno-lint-ignore-file no-explicit-any \nimport { FORBIDDEN_KEYS, META_KEYS, isSymbol } from \"../Utils/Useful\";\nimport { extract } from \"../Utils/InstructionType\";\nimport { ORG } from \"../Utils/OrganicType\";\nexport default class DataHandler {\n    constructor() {\n    }\n    //\n    get /*@__MANGLE_PROP__*/ $exc() { return null; }\n    ;\n    //\n    /*@__MANGLE_PROP__*/ $data(target) { return target; }\n    ;\n    /*@__MANGLE_PROP__*/ $hnd(cmd, meta, ...args) {\n        const ref = this.$data(meta);\n        // return meta as is\n        if (cmd == \"get\") {\n            if (args[0] == ORG.data) {\n                return ref;\n            }\n            ;\n            if (args[0] == ORG.exc) {\n                return this.$exc ?? ref?.[ORG.exc] ?? ref?.then?.((e) => e?.[ORG.exc]) ?? null;\n            }\n            ;\n            if ( // forbidden actions\n            isSymbol(args?.[0]) ||\n                FORBIDDEN_KEYS.has(args?.[0]) ||\n                META_KEYS.has?.(args?.[0])) {\n                return null;\n            }\n            ;\n        }\n        // any illegal is illegal (after 'then' or defer operation)...\n        if (ref == null || (typeof ref != \"object\" && typeof ref != \"function\")) {\n            return ref;\n        }\n        // needs to return itself\n        if (cmd == \"access\") {\n            return ref;\n        }\n        if (cmd == \"transfer\") {\n            // sometimes, `@uuid` may already is known from memory pool\n            const wrap = extract(meta);\n            return {\n                [ORG.type]: \"tf\",\n                [ORG.node]: ref,\n                [ORG.uuid]: wrap?.[ORG.uuid] ?? \"\"\n            };\n        }\n        ;\n        //\n        try {\n            // @ts-ignore \"no-idea\"\n            return Reflect?.[cmd]?.(ref, ...args);\n        }\n        catch (e) {\n            const err = e;\n            //\n            console.error(\"Wrong op: \" + err.message);\n            //\n            console.error(err);\n            console.trace(err);\n        }\n        //\n        return ref;\n    }\n    //\n    /*@__MANGLE_PROP__*/ $get(_uuid) { return null; }\n    ;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGF0YUhhbmRsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJEYXRhSGFuZGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx5Q0FBeUM7QUFDekMsT0FBTyxFQUFFLGNBQWMsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdEUsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ25ELE9BQU8sRUFBYyxHQUFHLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUd2RCxNQUFNLENBQUMsT0FBTyxPQUFPLFdBQVc7SUFDNUI7SUFDQSxDQUFDO0lBRUQsRUFBRTtJQUNGLElBQUksb0JBQW9CLENBQUMsSUFBSSxLQUFVLE9BQU8sSUFBSSxDQUFDLENBQUEsQ0FBQztJQUFBLENBQUM7SUFFckQsRUFBRTtJQUNGLG9CQUFvQixDQUFDLEtBQUssQ0FBQyxNQUEyQixJQUFJLE9BQU8sTUFBTSxDQUFDLENBQUMsQ0FBQztJQUFBLENBQUM7SUFDM0Usb0JBQW9CLENBQUMsSUFBSSxDQUFDLEdBQVcsRUFBRSxJQUFhLEVBQUUsR0FBRyxJQUFlO1FBQ3BFLE1BQU0sR0FBRyxHQUFRLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFbEMsb0JBQW9CO1FBQ3BCLElBQUksR0FBRyxJQUFJLEtBQUssRUFBRSxDQUFDO1lBQ2YsSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksR0FBRyxDQUFDLElBQUksRUFBRSxDQUFDO2dCQUFDLE9BQU8sR0FBRyxDQUFDO1lBQUMsQ0FBQztZQUFBLENBQUM7WUFDekMsSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDO2dCQUFDLE9BQU8sSUFBSSxDQUFDLElBQUksSUFBSSxHQUFHLEVBQUUsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLElBQUksR0FBRyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBTSxFQUFDLEVBQUUsQ0FBQSxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUM7WUFBQyxDQUFDO1lBQUEsQ0FBQztZQUMvRyxLQUFLLG9CQUFvQjtZQUNyQixRQUFRLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ25CLGNBQWMsQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFXLENBQUM7Z0JBQ3ZDLFNBQVMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQVEsQ0FBQyxFQUNuQyxDQUFDO2dCQUFDLE9BQU8sSUFBSSxDQUFDO1lBQUMsQ0FBQztZQUFBLENBQUM7UUFDdkIsQ0FBQztRQUVELDhEQUE4RDtRQUM5RCxJQUFJLEdBQUcsSUFBSSxJQUFJLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxRQUFRLElBQUksT0FBTyxHQUFHLElBQUksVUFBVSxDQUFDLEVBQUUsQ0FBQztZQUFDLE9BQU8sR0FBRyxDQUFDO1FBQUMsQ0FBQztRQUV4Rix5QkFBeUI7UUFDekIsSUFBSSxHQUFHLElBQUksUUFBUSxFQUFFLENBQUM7WUFBQyxPQUFPLEdBQUcsQ0FBQztRQUFDLENBQUM7UUFDcEMsSUFBSSxHQUFHLElBQUksVUFBVSxFQUFFLENBQUM7WUFDcEIsMkRBQTJEO1lBQzNELE1BQU0sSUFBSSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQVUsQ0FBQztZQUNwQyxPQUFPO2dCQUNILENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFLElBQUk7Z0JBQ2hCLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFLEdBQUc7Z0JBQ2YsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUcsSUFBWSxFQUFFLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUU7YUFDOUMsQ0FBQztRQUNOLENBQUM7UUFBQSxDQUFDO1FBRUYsRUFBRTtRQUNGLElBQUksQ0FBQztZQUNELHVCQUF1QjtZQUN2QixPQUFPLE9BQU8sRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUM7UUFDMUMsQ0FBQztRQUFDLE9BQU0sQ0FBQyxFQUFFLENBQUM7WUFDUixNQUFNLEdBQUcsR0FBRyxDQUFVLENBQUM7WUFFdkIsRUFBRTtZQUNGLE9BQU8sQ0FBQyxLQUFLLENBQUMsWUFBWSxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUUxQyxFQUFFO1lBQ0YsT0FBTyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNuQixPQUFPLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3ZCLENBQUM7UUFFRCxFQUFFO1FBQ0YsT0FBTyxHQUFHLENBQUM7SUFDZixDQUFDO0lBRUQsRUFBRTtJQUNGLG9CQUFvQixDQUFDLElBQUksQ0FBQyxLQUEwQixJQUFTLE9BQU8sSUFBSSxDQUFDLENBQUMsQ0FBQztJQUFBLENBQUM7Q0FDL0UiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBkZW5vLWxpbnQtaWdub3JlLWZpbGUgbm8tZXhwbGljaXQtYW55IFxyXG5pbXBvcnQgeyBGT1JCSURERU5fS0VZUywgTUVUQV9LRVlTLCBpc1N5bWJvbCB9IGZyb20gXCIuLi9VdGlscy9Vc2VmdWxcIjtcclxuaW1wb3J0IHsgZXh0cmFjdCB9IGZyb20gXCIuLi9VdGlscy9JbnN0cnVjdGlvblR5cGVcIjtcclxuaW1wb3J0IHsgdHlwZSBJTWV0YSwgT1JHIH0gZnJvbSBcIi4uL1V0aWxzL09yZ2FuaWNUeXBlXCI7XHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRGF0YUhhbmRsZXIge1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICB9XHJcblxyXG4gICAgLy9cclxuICAgIGdldCAvKkBfX01BTkdMRV9QUk9QX18qLyAkZXhjKCk6IGFueSB7IHJldHVybiBudWxsO307XHJcblxyXG4gICAgLy9cclxuICAgIC8qQF9fTUFOR0xFX1BST1BfXyovICRkYXRhKHRhcmdldDogdW5rbm93bnxzdHJpbmd8bnVsbCkgeyByZXR1cm4gdGFyZ2V0OyB9O1xyXG4gICAgLypAX19NQU5HTEVfUFJPUF9fKi8gJGhuZChjbWQ6IHN0cmluZywgbWV0YTogdW5rbm93biwgLi4uYXJnczogdW5rbm93bltdKSB7XHJcbiAgICAgICAgY29uc3QgcmVmOiBhbnkgPSB0aGlzLiRkYXRhKG1ldGEpO1xyXG5cclxuICAgICAgICAvLyByZXR1cm4gbWV0YSBhcyBpc1xyXG4gICAgICAgIGlmIChjbWQgPT0gXCJnZXRcIikge1xyXG4gICAgICAgICAgICBpZiAoYXJnc1swXSA9PSBPUkcuZGF0YSkgeyByZXR1cm4gcmVmOyB9O1xyXG4gICAgICAgICAgICBpZiAoYXJnc1swXSA9PSBPUkcuZXhjKSB7IHJldHVybiB0aGlzLiRleGMgPz8gcmVmPy5bT1JHLmV4Y10gPz8gcmVmPy50aGVuPy4oKGU6IGFueSk9PmU/LltPUkcuZXhjXSkgPz8gbnVsbDsgfTtcclxuICAgICAgICAgICAgaWYgKCAvLyBmb3JiaWRkZW4gYWN0aW9uc1xyXG4gICAgICAgICAgICAgICAgaXNTeW1ib2woYXJncz8uWzBdKSB8fFxyXG4gICAgICAgICAgICAgICAgRk9SQklEREVOX0tFWVMuaGFzKGFyZ3M/LlswXSBhcyBzdHJpbmcpIHx8IFxyXG4gICAgICAgICAgICAgICAgTUVUQV9LRVlTLmhhcz8uKGFyZ3M/LlswXSBhcyBhbnkpXHJcbiAgICAgICAgICAgICkgeyByZXR1cm4gbnVsbDsgfTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIGFueSBpbGxlZ2FsIGlzIGlsbGVnYWwgKGFmdGVyICd0aGVuJyBvciBkZWZlciBvcGVyYXRpb24pLi4uXHJcbiAgICAgICAgaWYgKHJlZiA9PSBudWxsIHx8ICh0eXBlb2YgcmVmICE9IFwib2JqZWN0XCIgJiYgdHlwZW9mIHJlZiAhPSBcImZ1bmN0aW9uXCIpKSB7IHJldHVybiByZWY7IH1cclxuXHJcbiAgICAgICAgLy8gbmVlZHMgdG8gcmV0dXJuIGl0c2VsZlxyXG4gICAgICAgIGlmIChjbWQgPT0gXCJhY2Nlc3NcIikgeyByZXR1cm4gcmVmOyB9XHJcbiAgICAgICAgaWYgKGNtZCA9PSBcInRyYW5zZmVyXCIpIHtcclxuICAgICAgICAgICAgLy8gc29tZXRpbWVzLCBgQHV1aWRgIG1heSBhbHJlYWR5IGlzIGtub3duIGZyb20gbWVtb3J5IHBvb2xcclxuICAgICAgICAgICAgY29uc3Qgd3JhcCA9IGV4dHJhY3QobWV0YSkgYXMgSU1ldGE7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICBbT1JHLnR5cGVdOiBcInRmXCIsIFxyXG4gICAgICAgICAgICAgICAgW09SRy5ub2RlXTogcmVmLCBcclxuICAgICAgICAgICAgICAgIFtPUkcudXVpZF06ICh3cmFwIGFzIGFueSk/LltPUkcudXVpZF0gPz8gXCJcIlxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIC8vXHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgLy8gQHRzLWlnbm9yZSBcIm5vLWlkZWFcIlxyXG4gICAgICAgICAgICByZXR1cm4gUmVmbGVjdD8uW2NtZF0/LihyZWYsIC4uLmFyZ3MpO1xyXG4gICAgICAgIH0gY2F0Y2goZSkge1xyXG4gICAgICAgICAgICBjb25zdCBlcnIgPSBlIGFzIEVycm9yO1xyXG5cclxuICAgICAgICAgICAgLy9cclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIldyb25nIG9wOiBcIiArIGVyci5tZXNzYWdlKTtcclxuXHJcbiAgICAgICAgICAgIC8vXHJcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcclxuICAgICAgICAgICAgY29uc29sZS50cmFjZShlcnIpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy9cclxuICAgICAgICByZXR1cm4gcmVmO1xyXG4gICAgfVxyXG5cclxuICAgIC8vXHJcbiAgICAvKkBfX01BTkdMRV9QUk9QX18qLyAkZ2V0KF91dWlkOiB1bmtub3dufHN0cmluZ3xudWxsKTogYW55IHsgcmV0dXJuIG51bGw7IH07XHJcbn1cclxuIl19","// deno-lint-ignore-file no-explicit-any\nimport ObjectProxy from \"../../Interface/ObjectProxy\";\n//\nimport { isSymbol, FORBIDDEN_KEYS, META_KEYS, isPromise, doOnlyAfterResolve } from \"../Utils/Useful\";\nimport { bindCtx, MakeReference } from \"../Utils/InstructionType\";\nimport ORG from \"../Utils/OrganicType\";\n//\nimport DataHandler from \"./DataHandler\";\nexport default class PromiseHandler extends DataHandler {\n    constructor() { super(); }\n    //\n    /*@__MANGLE_PROP__*/ $data(target) {\n        return (isPromise(target?.[ORG.data]) ? target?.[ORG.data] : target) ?? target;\n    }\n    //\n    /*@__MANGLE_PROP__*/ $deferOp(target, cb = (e) => e) {\n        return doOnlyAfterResolve(target, cb) ?? target;\n    }\n    //\n    /*@__MANGLE_PROP__*/ $wrapPromise(result, handler = null) {\n        return $wrapPromise(result, handler ?? this);\n    }\n    //\n    /*@__MANGLE_PROP__*/ $hnd(cmd, meta, ...args) {\n        // isn't promise itself\n        const data = this.$data(meta);\n        //\n        if (cmd == \"get\") {\n            if (args[0] == ORG.data) {\n                return data;\n            }\n            ;\n            if (args[0] == ORG.exc) {\n                return this.$exc ?? data?.[ORG.exc] ?? data?.then?.((e) => e?.[ORG.exc]) ?? null;\n            }\n            ;\n            //\n            if ([\"then\", \"catch\", \"finally\"].indexOf(args?.[0]) >= 0) {\n                // @ts-ignore \"no idea\"\n                return bindCtx(Reflect?.[cmd]?.(data, ...args), data);\n            }\n            //\n            if ( // forbidden actions\n            isSymbol(args?.[0]) ||\n                FORBIDDEN_KEYS.has(args?.[0]) ||\n                META_KEYS.has?.(args?.[0])) {\n                return null;\n            }\n            ;\n        }\n        // primitive value or non-object/function\n        if (data == null || (typeof data != \"object\" && typeof data != \"function\")) {\n            return data;\n        }\n        ;\n        // unwrap first-level promise\n        return this.$wrapPromise(this.$deferOp(data, (raw) => {\n            return super.$hnd(cmd, raw, ...args);\n        }));\n    }\n    //\n    /*@__MANGLE_PROP__*/ $get(_uuid) { return null; }\n    ;\n}\n//\n/*@__PURE__*/\nexport const /*@__MANGLE_PROP__*/ $wrapPromise = (result, handler = new PromiseHandler()) => {\n    if (isPromise(result)) {\n        return new Proxy(MakeReference(result), new ObjectProxy(handler));\n    }\n    return result;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUHJvbWlzZUhhbmRsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJQcm9taXNlSGFuZGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3Q0FBd0M7QUFDeEMsT0FBTyxXQUFXLE1BQU0sNkJBQTZCLENBQUM7QUFFdEQsRUFBRTtBQUNGLE9BQU8sRUFBRSxRQUFRLEVBQUUsY0FBYyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsa0JBQWtCLEVBQWMsTUFBTSxpQkFBaUIsQ0FBQTtBQUNoSCxPQUFPLEVBQUUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ2xFLE9BQU8sR0FBRyxNQUFNLHNCQUFzQixDQUFDO0FBRXZDLEVBQUU7QUFDRixPQUFPLFdBQVcsTUFBTSxlQUFlLENBQUM7QUFHeEMsTUFBTSxDQUFDLE9BQU8sT0FBTyxjQUFlLFNBQVEsV0FBVztJQUNuRCxnQkFBZ0IsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBRTFCLEVBQUU7SUFDRixvQkFBb0IsQ0FBQyxLQUFLLENBQUMsTUFBZ0M7UUFDdkQsT0FBTyxDQUFDLFNBQVMsQ0FBRSxNQUFjLEVBQUUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUUsTUFBYyxFQUFFLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxNQUFNLENBQUM7SUFDckcsQ0FBQztJQUVELEVBQUU7SUFDRixvQkFBb0IsQ0FBQyxRQUFRLENBQUMsTUFBZ0MsRUFBRSxLQUFLLENBQUMsQ0FBTSxFQUFDLEVBQUUsQ0FBQSxDQUFDO1FBQzVFLE9BQU8sa0JBQWtCLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxJQUFJLE1BQU0sQ0FBQztJQUNwRCxDQUFDO0lBRUQsRUFBRTtJQUNGLG9CQUFvQixDQUFDLFlBQVksQ0FBb0IsTUFBb0IsRUFBRSxVQUE0QixJQUFJO1FBQ3ZHLE9BQU8sWUFBWSxDQUFD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QUM5QixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBkZW5vLWxpbnQtaWdub3JlLWZpbGUgbm8tZXhwbGljaXQtYW55XHJcbmltcG9ydCBPYmplY3RQcm94eSBmcm9tIFwiLi4vLi4vSW50ZXJmYWNlL09iamVjdFByb3h5XCI7XHJcblxyXG4vL1xyXG5pbXBvcnQgeyBpc1N5bWJvbCwgRk9SQklEREVOX0tFWVMsIE1FVEFfS0VZUywgaXNQcm9taXNlLCBkb09ubHlBZnRlclJlc29sdmUsIHR5cGUgSVdyYXAgfSBmcm9tIFwiLi4vVXRpbHMvVXNlZnVsXCJcclxuaW1wb3J0IHsgYmluZEN0eCwgTWFrZVJlZmVyZW5jZSB9IGZyb20gXCIuLi9VdGlscy9JbnN0cnVjdGlvblR5cGVcIjtcclxuaW1wb3J0IE9SRyBmcm9tIFwiLi4vVXRpbHMvT3JnYW5pY1R5cGVcIjtcclxuXHJcbi8vXHJcbmltcG9ydCBEYXRhSGFuZGxlciBmcm9tIFwiLi9EYXRhSGFuZGxlclwiO1xyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFByb21pc2VIYW5kbGVyIGV4dGVuZHMgRGF0YUhhbmRsZXIge1xyXG4gICAgY29uc3RydWN0b3IoKSB7IHN1cGVyKCk7IH1cclxuXHJcbiAgICAvL1xyXG4gICAgLypAX19NQU5HTEVfUFJPUF9fKi8gJGRhdGEodGFyZ2V0OiB1bmtub3dufFByb21pc2U8dW5rbm93bj4pIHtcclxuICAgICAgICByZXR1cm4gKGlzUHJvbWlzZSgodGFyZ2V0IGFzIGFueSk/LltPUkcuZGF0YV0pID8gKHRhcmdldCBhcyBhbnkpPy5bT1JHLmRhdGFdIDogdGFyZ2V0KSA/PyB0YXJnZXQ7XHJcbiAgICB9XHJcblxyXG4gICAgLy9cclxuICAgIC8qQF9fTUFOR0xFX1BST1BfXyovICRkZWZlck9wKHRhcmdldDogdW5rbm93bnxQcm9taXNlPHVua25vd24+LCBjYiA9IChlOiBhbnkpPT5lKSB7XHJcbiAgICAgICAgcmV0dXJuIGRvT25seUFmdGVyUmVzb2x2ZSh0YXJnZXQsIGNiKSA/PyB0YXJnZXQ7XHJcbiAgICB9XHJcblxyXG4gICAgLy9cclxuICAgIC8qQF9fTUFOR0xFX1BST1BfXyovICR3cmFwUHJvbWlzZTxUIGV4dGVuZHMgdW5rbm93bj4ocmVzdWx0OiBUfFByb21pc2U8VD4sIGhhbmRsZXI6IERhdGFIYW5kbGVyfG51bGwgPSBudWxsKTogSVdyYXA8VD58bnVsbCB7XHJcbiAgICAgICAgcmV0dXJuICR3cmFwUHJvbWlzZShyZXN1bHQsIGhhbmRsZXIgPz8gdGhpcyk7XHJcbiAgICB9XHJcblxyXG4gICAgLy9cclxuICAgIC8qQF9fTUFOR0xFX1BST1BfXyovJGhuZChjbWQ6IHN0cmluZywgbWV0YTogdW5rbm93biwgLi4uYXJnczogdW5rbm93bltdKSB7XHJcbiAgICAgICAgLy8gaXNuJ3QgcHJvbWlzZSBpdHNlbGZcclxuICAgICAgICBjb25zdCBkYXRhID0gdGhpcy4kZGF0YShtZXRhKTtcclxuXHJcbiAgICAgICAgLy9cclxuICAgICAgICBpZiAoY21kID09IFwiZ2V0XCIpIHtcclxuICAgICAgICAgICAgaWYgKGFyZ3NbMF0gPT0gT1JHLmRhdGEpIHsgcmV0dXJuIGRhdGE7IH07XHJcbiAgICAgICAgICAgIGlmIChhcmdzWzBdID09IE9SRy5leGMpIHsgcmV0dXJuIHRoaXMuJGV4YyA/PyBkYXRhPy5bT1JHLmV4Y10gPz8gZGF0YT8udGhlbj8uKChlOiBhbnkpPT5lPy5bT1JHLmV4Y10pID8/IG51bGw7IH07XHJcblxyXG4gICAgICAgICAgICAvL1xyXG4gICAgICAgICAgICBpZiAoW1widGhlblwiLCBcImNhdGNoXCIsIFwiZmluYWxseVwiXS5pbmRleE9mKChhcmdzIGFzIGFueVtdKT8uWzBdKSA+PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAvLyBAdHMtaWdub3JlIFwibm8gaWRlYVwiXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gYmluZEN0eChSZWZsZWN0Py5bY21kXT8uKGRhdGEsIC4uLmFyZ3MpLCBkYXRhKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLy9cclxuICAgICAgICAgICAgaWYgKCAvLyBmb3JiaWRkZW4gYWN0aW9uc1xyXG4gICAgICAgICAgICAgICAgaXNTeW1ib2woYXJncz8uWzBdKSB8fFxyXG4gICAgICAgICAgICAgICAgRk9SQklEREVOX0tFWVMuaGFzKGFyZ3M/LlswXSBhcyBzdHJpbmcpIHx8IFxyXG4gICAgICAgICAgICAgICAgTUVUQV9LRVlTLmhhcz8uKGFyZ3M/LlswXSBhcyBhbnkpXHJcbiAgICAgICAgICAgICkgeyByZXR1cm4gbnVsbDsgfTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIHByaW1pdGl2ZSB2YWx1ZSBvciBub24tb2JqZWN0L2Z1bmN0aW9uXHJcbiAgICAgICAgaWYgKGRhdGEgPT0gbnVsbCB8fCAodHlwZW9mIGRhdGEgIT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgZGF0YSAhPSBcImZ1bmN0aW9uXCIpKSB7IHJldHVybiBkYXRhOyB9O1xyXG5cclxuICAgICAgICAvLyB1bndyYXAgZmlyc3QtbGV2ZWwgcHJvbWlzZVxyXG4gICAgICAgIHJldHVybiB0aGlzLiR3cmFwUHJvbWlzZSh0aGlzLiRkZWZlck9wKGRhdGEsIChyYXcpPT4ge1xyXG4gICAgICAgICAgICByZXR1cm4gc3VwZXIuJGhuZChjbWQsIHJhdywgLi4uYXJncyk7XHJcbiAgICAgICAgfSkpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vXHJcbiAgICAvKkBfX01BTkdMRV9QUk9QX18qLyRnZXQoX3V1aWQ6IHVua25vd258c3RyaW5nfG51bGwpOiBhbnkgeyByZXR1cm4gbnVsbDsgfTtcclxufVxyXG5cclxuLy9cclxuLypAX19QVVJFX18qL1xyXG5leHBvcnQgY29uc3QgLypAX19NQU5HTEVfUFJPUF9fKi8gJHdyYXBQcm9taXNlID0gPFQgZXh0ZW5kcyB1bmtub3duPihyZXN1bHQ6IFR8UHJvbWlzZTxUPiwgaGFuZGxlcjogRGF0YUhhbmRsZXIgPSBuZXcgUHJvbWlzZUhhbmRsZXIoKSk6IElXcmFwPFQ+fG51bGwgPT4ge1xyXG4gICAgaWYgKGlzUHJvbWlzZShyZXN1bHQpKSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQcm94eShNYWtlUmVmZXJlbmNlKHJlc3VsdCksIG5ldyBPYmplY3RQcm94eShoYW5kbGVyKSkgYXMgSVdyYXA8VD58bnVsbDtcclxuICAgIH1cclxuICAgIHJldHVybiByZXN1bHQgYXMgSVdyYXA8VD47XHJcbn1cclxuIl19","// deno-lint-ignore-file no-explicit-any\n/*@__MANGLE_PROP__*/ /*@__NOINLINE__*/ export const PMS = Promise;\n/*@__MANGLE_PROP__*/ /*@__NOINLINE__*/ export const TS = {\n    /*@__MANGLE_PROP__*/ /*@__PURE__*/ \"rjb\": \"rejectBy\",\n    /*@__MANGLE_PROP__*/ /*@__PURE__*/ \"rvb\": \"resolveBy\",\n    /*@__MANGLE_PROP__*/ /*@__PURE__*/ \"rj\": \"reject\",\n    /*@__MANGLE_PROP__*/ /*@__PURE__*/ \"rv\": \"resolve\",\n    /*@__MANGLE_PROP__*/ /*@__PURE__*/ \"cr\": \"create\",\n    /*@__MANGLE_PROP__*/ /*@__PURE__*/ \"cs\": \"createSync\",\n    /*@__MANGLE_PROP__*/ /*@__PURE__*/ \"a\": \"array\",\n    /*@__MANGLE_PROP__*/ /*@__PURE__*/ \"ta\": \"typedarray\",\n    /*@__MANGLE_PROP__*/ /*@__PURE__*/ \"udf\": \"undefined\"\n};\n/*@__MANGLE_PROP__*/ /*@__PURE__*/ /*@__NOINLINE__*/ export default TS;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWxpYXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJBbGlhcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3Q0FBd0M7QUFDeEMsb0JBQW9CLENBQUMsaUJBQWlCLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxHQUFRLE9BQU8sQ0FBQztBQUN2RSxvQkFBb0IsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLEdBQVE7SUFDMUQsb0JBQW9CLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxVQUFVO0lBQ3BELG9CQUFvQixDQUFDLGFBQWEsQ0FBQyxLQUFLLEVBQUUsV0FBVztJQUNyRCxvQkFBb0IsQ0FBQyxhQUFhLENBQUMsSUFBSSxFQUFFLFFBQVE7SUFDakQsb0JBQW9CLENBQUMsYUFBYSxDQUFDLElBQUksRUFBRSxTQUFTO0lBQ2xELG9CQUFvQixDQUFDLGFBQWEsQ0FBQyxJQUFJLEVBQUUsUUFBUTtJQUNqRCxvQkFBb0IsQ0FBQyxhQUFhLENBQUMsSUFBSSxFQUFFLFlBQVk7SUFDckQsb0JBQW9CLENBQUMsYUFBYSxDQUFDLEdBQUcsRUFBRSxPQUFPO0lBQy9DLG9CQUFvQixDQUFDLGFBQWEsQ0FBQyxJQUFJLEVBQUUsWUFBWTtJQUNyRCxvQkFBb0IsQ0FBQyxhQUFhLENBQUMsS0FBSyxFQUFFLFdBQVc7Q0FDeEQsQ0FBQztBQUNGLG9CQUFvQixDQUFDLGFBQWEsQ0FBQyxpQkFBaUIsQ0FBQyxlQUFlLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGRlbm8tbGludC1pZ25vcmUtZmlsZSBuby1leHBsaWNpdC1hbnlcclxuLypAX19NQU5HTEVfUFJPUF9fKi8gLypAX19OT0lOTElORV9fKi8gZXhwb3J0IGNvbnN0IFBNUzogYW55ID0gUHJvbWlzZTtcclxuLypAX19NQU5HTEVfUFJPUF9fKi8gLypAX19OT0lOTElORV9fKi8gZXhwb3J0IGNvbnN0IFRTOiBhbnkgPSB7XHJcbiAgICAvKkBfX01BTkdMRV9QUk9QX18qLyAvKkBfX1BVUkVfXyovIFwicmpiXCI6IFwicmVqZWN0QnlcIixcclxuICAgIC8qQF9fTUFOR0xFX1BST1BfXyovIC8qQF9fUFVSRV9fKi8gXCJydmJcIjogXCJyZXNvbHZlQnlcIixcclxuICAgIC8qQF9fTUFOR0xFX1BST1BfXyovIC8qQF9fUFVSRV9fKi8gXCJyalwiOiBcInJlamVjdFwiLFxyXG4gICAgLypAX19NQU5HTEVfUFJPUF9fKi8gLypAX19QVVJFX18qLyBcInJ2XCI6IFwicmVzb2x2ZVwiLFxyXG4gICAgLypAX19NQU5HTEVfUFJPUF9fKi8gLypAX19QVVJFX18qLyBcImNyXCI6IFwiY3JlYXRlXCIsXHJcbiAgICAvKkBfX01BTkdMRV9QUk9QX18qLyAvKkBfX1BVUkVfXyovIFwiY3NcIjogXCJjcmVhdGVTeW5jXCIsXHJcbiAgICAvKkBfX01BTkdMRV9QUk9QX18qLyAvKkBfX1BVUkVfXyovIFwiYVwiOiBcImFycmF5XCIsXHJcbiAgICAvKkBfX01BTkdMRV9QUk9QX18qLyAvKkBfX1BVUkVfXyovIFwidGFcIjogXCJ0eXBlZGFycmF5XCIsXHJcbiAgICAvKkBfX01BTkdMRV9QUk9QX18qLyAvKkBfX1BVUkVfXyovIFwidWRmXCI6IFwidW5kZWZpbmVkXCJcclxufTtcclxuLypAX19NQU5HTEVfUFJPUF9fKi8gLypAX19QVVJFX18qLyAvKkBfX05PSU5MSU5FX18qLyBleHBvcnQgZGVmYXVsdCBUUztcclxuIl19","// deno-lint-ignore-file ban-types no-explicit-any no-explicit-any ban-types no-explicit-any no-explicit-any\nimport { ORG } from \"./OrganicType\";\nimport { doOnlyAfterResolve } from \"./Useful\";\n/*@__MANGLE_PROP__*/\nexport const MakeReference = (data = null) => {\n    // not ordinal not acceptable\n    if (data == null || (typeof data != \"function\" && typeof data != \"object\")) {\n        return data;\n    }\n    // already is functional, skip it\n    if (typeof data == \"function\" && data?.[ORG.data]) {\n        return data;\n    }\n    // make function or class compatible for proxy\n    const fx = function () { if (this != null) {\n        this[ORG.data] = data;\n    } ; };\n    if (fx != null) {\n        /*@__MANGLE_PROP__*/ /*@__PURE__*/ fx.prototype.stringify = function () { return JSON.stringify(this[ORG.data] || \"{}\"); };\n        /*@__MANGLE_PROP__*/ /*@__PURE__*/ fx.stringify = () => { return JSON.stringify(data || \"{}\"); };\n        // @ts-ignore \"typescript not supports Symbol\"\n        fx[ORG.data] = data;\n    }\n    //\n    return fx;\n};\n// any meta contains, and can't to be primitive or array directly\n// only constructor, function, or object\n/*@__MANGLE_PROP__*/\nexport const bindCtx = (gt, ref = null) => {\n    if (typeof gt == \"function\" && typeof gt?.bind == \"function\" && (typeof ref == \"object\" || typeof ref == \"function\")) {\n        // may be organic or context detached\n        return gt?.bind?.(ref) ?? gt;\n    }\n    return gt;\n};\n/*@__MANGLE_PROP__*/\nexport const wrapWeakMap = /*@__MANGLE_PROP__*/ new WeakMap([]);\n/*@__MANGLE_PROP__*/\nexport const prepare = (w) => {\n    return doOnlyAfterResolve(w, (wrap) => {\n        if (wrap?.[ORG.data])\n            return wrap?.[ORG.data];\n        const organic = wrapWeakMap.get(wrap) ?? wrap;\n        return organic?.[ORG.data] ?? organic;\n    });\n};\n/*@__MANGLE_PROP__*/\nexport const redirect = (w) => {\n    return doOnlyAfterResolve(w, (wrap) => {\n        const pt = prepare(wrap);\n        return (pt?.[ORG.uuid] || pt?.[ORG.type]) ? pt : null;\n    });\n};\n/*@__MANGLE_PROP__*/\nexport const extract = (w) => {\n    return doOnlyAfterResolve(w, (wrap) => {\n        const pt = prepare(wrap);\n        return ((pt?.[ORG.uuid] || pt?.[ORG.type])) ? pt : null;\n    });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW5zdHJ1Y3Rpb25UeXBlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiSW5zdHJ1Y3Rpb25UeXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDRHQUE0RztBQUM1RyxPQUFPLEVBQUUsR0FBRyxFQUFjLE1BQU0sZUFBZSxDQUFDO0FBQ2hELE9BQU8sRUFBRSxrQkFBa0IsRUFBbUIsTUFBTSxVQUFVLENBQUM7QUFFL0Qsb0JBQW9CO0FBQ3BCLE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRyxDQUFDLE9BQVksSUFBSSxFQUFtQixFQUFFO0lBQy9ELDZCQUE2QjtJQUM3QixJQUFJLElBQUksSUFBSSxJQUFJLElBQUksQ0FBQyxPQUFPLElBQUksSUFBSSxVQUFVLElBQUksT0FBTyxJQUFJLElBQUksUUFBUSxDQUFDLEVBQUUsQ0FBQztRQUN6RSxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRUQsaUNBQWlDO0lBQ2pDLElBQUksT0FBTyxJQUFJLElBQUksVUFBVSxJQUFJLElBQUksRUFBRSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDO1FBQUMsT0FBTyxJQUFJLENBQUM7SUFBQyxDQUFDO0lBRW5FLDhDQUE4QztJQUM5QyxNQUFNLEVBQUUsR0FBRyxjQUFzQixJQUFJLElBQUksSUFBSSxJQUFJLEVBQUUsQ0FBQztRQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDO0lBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQyxDQUFDLENBQUE7SUFDaEYsSUFBSSxFQUFFLElBQUksSUFBSSxFQUFFLENBQUM7UUFDYixvQkFBb0IsQ0FBQyxhQUFhLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxTQUFTLEdBQUcsY0FBYSxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTtRQUN6SCxvQkFBb0Is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YmFuLXR5cGVzIG5vLWV4cGxpY2l0LWFueSBuby1leHBsaWNpdC1hbnkgYmFuLXR5cGVzIG5vLWV4cGxpY2l0LWFueSBuby1leHBsaWNpdC1hbnlcclxuaW1wb3J0IHsgT1JHLCB0eXBlIElNZXRhIH0gZnJvbSBcIi4vT3JnYW5pY1R5cGVcIjtcclxuaW1wb3J0IHsgZG9Pbmx5QWZ0ZXJSZXNvbHZlLCBJV3JhcCwgTVByb21pc2UgfSBmcm9tIFwiLi9Vc2VmdWxcIjtcclxuXHJcbi8qQF9fTUFOR0xFX1BST1BfXyovIFxyXG5leHBvcnQgY29uc3QgTWFrZVJlZmVyZW5jZSA9IChkYXRhOiBhbnkgPSBudWxsKTogRnVuY3Rpb258b2JqZWN0ID0+IHtcclxuICAgIC8vIG5vdCBvcmRpbmFsIG5vdCBhY2NlcHRhYmxlXHJcbiAgICBpZiAoZGF0YSA9PSBudWxsIHx8ICh0eXBlb2YgZGF0YSAhPSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIGRhdGEgIT0gXCJvYmplY3RcIikpIHtcclxuICAgICAgICByZXR1cm4gZGF0YTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBhbHJlYWR5IGlzIGZ1bmN0aW9uYWwsIHNraXAgaXRcclxuICAgIGlmICh0eXBlb2YgZGF0YSA9PSBcImZ1bmN0aW9uXCIgJiYgZGF0YT8uW09SRy5kYXRhXSkgeyByZXR1cm4gZGF0YTsgfVxyXG5cclxuICAgIC8vIG1ha2UgZnVuY3Rpb24gb3IgY2xhc3MgY29tcGF0aWJsZSBmb3IgcHJveHlcclxuICAgIGNvbnN0IGZ4ID0gZnVuY3Rpb24odGhpczogYW55KSB7IGlmICh0aGlzICE9IG51bGwpIHsgdGhpc1tPUkcuZGF0YV0gPSBkYXRhOyB9OyB9XHJcbiAgICBpZiAoZnggIT0gbnVsbCkge1xyXG4gICAgICAgIC8qQF9fTUFOR0xFX1BST1BfXyovIC8qQF9fUFVSRV9fKi8gZngucHJvdG90eXBlLnN0cmluZ2lmeSA9IGZ1bmN0aW9uICgpeyByZXR1cm4gSlNPTi5zdHJpbmdpZnkodGhpc1tPUkcuZGF0YV0gfHwgXCJ7fVwiKTsgfVxyXG4gICAgICAgIC8qQF9fTUFOR0xFX1BST1BfXyovIC8qQF9fUFVSRV9fKi8gZnguc3RyaW5naWZ5ID0gKCk9PnsgcmV0dXJuIEpTT04uc3RyaW5naWZ5KGRhdGEgfHwgXCJ7fVwiKTsgfVxyXG5cclxuICAgICAgICAvLyBAdHMtaWdub3JlIFwidHlwZXNjcmlwdCBub3Qgc3VwcG9ydHMgU3ltYm9sXCJcclxuICAgICAgICBmeFtPUkcuZGF0YV0gPSBkYXRhO1xyXG4gICAgfVxyXG5cclxuICAgIC8vXHJcbiAgICByZXR1cm4gZng7XHJcbn1cclxuXHJcbi8vIGFueSBtZXRhIGNvbnRhaW5zLCBhbmQgY2FuJ3QgdG8gYmUgcHJpbWl0aXZlIG9yIGFycmF5IGRpcmVjdGx5XHJcbi8vIG9ubHkgY29uc3RydWN0b3IsIGZ1bmN0aW9uLCBvciBvYmplY3RcclxuLypAX19NQU5HTEVfUFJPUF9fKi8gXHJcbmV4cG9ydCBjb25zdCBiaW5kQ3R4ID0gKGd0OiBhbnksIHJlZjogYW55fG51bGwgPSBudWxsKT0+e1xyXG4gICAgaWYgKHR5cGVvZiBndCA9PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIGd0Py5iaW5kID09IFwiZnVuY3Rpb25cIiAmJiAodHlwZW9mIHJlZiA9PSBcIm9iamVjdFwiIHx8IHR5cGVvZiByZWYgPT0gXCJmdW5jdGlvblwiKSkge1xyXG4gICAgICAgIC8vIG1heSBiZSBvcmdhbmljIG9yIGNvbnRleHQgZGV0YWNoZWRcclxuICAgICAgICByZXR1cm4gZ3Q/LmJpbmQ/LihyZWYpID8/IGd0O1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGd0O1xyXG59XHJcblxyXG4vKkBfX01BTkdMRV9QUk9QX18qLyBcclxuZXhwb3J0IGNvbnN0IHdyYXBXZWFrTWFwID0gLypAX19NQU5HTEVfUFJPUF9fKi8gbmV3IFdlYWtNYXAoW10pO1xyXG5cclxuLypAX19NQU5HTEVfUFJPUF9fKi8gXHJcbmV4cG9ydCBjb25zdCBwcmVwYXJlID0gPFQgZXh0ZW5kcyB1bmtub3duPih3OiBJV3JhcDxUPnxUfElNZXRhKTogYW55ID0+IHtcclxuICAgIHJldHVybiBkb09ubHlBZnRlclJlc29sdmUodywgKHdyYXA6IGFueSk9PntcclxuICAgICAgICBpZiAod3JhcD8uW09SRy5kYXRhXSkgcmV0dXJuIHdyYXA/LltPUkcuZGF0YV07XHJcbiAgICAgICAgY29uc3Qgb3JnYW5pYyA9IHdyYXBXZWFrTWFwLmdldCh3cmFwKSA/PyB3cmFwO1xyXG4gICAgICAgIHJldHVybiBvcmdhbmljPy5bT1JHLmRhdGFdID8/IG9yZ2FuaWM7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLypAX19NQU5HTEVfUFJPUF9fKi8gXHJcbmV4cG9ydCBjb25zdCByZWRpcmVjdCA9IDxUIGV4dGVuZHMgdW5rbm93bj4odzogSVdyYXA8VD58TVByb21pc2U8VD58TVByb21pc2U8SU1ldGE+KTogTVByb21pc2U8SU1ldGE+ID0+e1xyXG4gICAgcmV0dXJuIGRvT25seUFmdGVyUmVzb2x2ZSh3LCAod3JhcDogYW55KT0+e1xyXG4gICAgICAgIGNvbnN0IHB0ID0gcHJlcGFyZSh3cmFwKTtcclxuICAgICAgICByZXR1cm4gKChwdD8uW09SRy51dWlkXXx8cHQ/LltPUkcudHlwZV0pIGFzIHN0cmluZ3xudWxsKT9wdDpudWxsO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi8qQF9fTUFOR0xFX1BST1BfXyovIFxyXG5leHBvcnQgY29uc3QgZXh0cmFjdCA9IDxUIGV4dGVuZHMgdW5rbm93bj4odzogSVdyYXA8VD58TVByb21pc2U8VD58TVByb21pc2U8SU1ldGE+KTogTVByb21pc2U8SU1ldGE+ID0+e1xyXG4gICAgcmV0dXJuIGRvT25seUFmdGVyUmVzb2x2ZSh3LCAod3JhcDogYW55KT0+e1xyXG4gICAgICAgIGNvbnN0IHB0ID0gcHJlcGFyZSh3cmFwKTtcclxuICAgICAgICByZXR1cm4gKChwdD8uW09SRy51dWlkXXx8cHQ/LltPUkcudHlwZV0gYXMgc3RyaW5nfG51bGwpKT9wdDpudWxsO1xyXG4gICAgfSk7XHJcbn1cclxuIl19","// deno-lint-ignore-file no-explicit-any\n/*@__PURE__*/ export var $ORG;\n(function ($ORG) {\n    $ORG[\"type\"] = \"!#type#!\";\n    $ORG[\"uuid\"] = \"!#uuid#!\";\n    $ORG[\"node\"] = \"!#node#!\";\n    $ORG[\"payload\"] = \"!#payload#!\";\n    $ORG[\"index\"] = \"!#index#!\";\n    $ORG[\"exc\"] = \"!#exc#!\";\n})($ORG || ($ORG = {}));\n//\n/*@__MANGLE_PROP__*/ const $exc$ = /*@__MANGLE_PROP__*/ Symbol(\"@exc\");\n/*@__MANGLE_PROP__*/ const $data$ = /*@__MANGLE_PROP__*/ Symbol(\"@data\");\n/*@__MANGLE_PROP__*/ const $sync$ = /*@__MANGLE_PROP__*/ Symbol(\"@sync\");\n/*@__MANGLE_PROP__*/\nexport const ORG = {\n    /*@__MANGLE_PROP__*/ sync: $sync$,\n    /*@__MANGLE_PROP__*/ exc: $exc$,\n    data: $data$,\n    type: $ORG.type,\n    uuid: $ORG.uuid,\n    node: $ORG.node,\n    payload: $ORG.payload,\n    index: $ORG.index\n};\n;\n//\n/*@__MANGLE_PROP__*/ /*@__PURE__*/ export default ORG;\n/*@__MANGLE_PROP__*/ /*@__PURE__*/ export const $bindings$ = /*@__MANGLE_PROP__*/ new WeakMap();\n/*@__MANGLE_PROP__*/ /*@__PURE__*/ export const bindWithContext = (context, obj) => {\n    try {\n        context[ORG.exc] = obj;\n    }\n    catch (e) {\n        console.warn(e);\n    }\n    ;\n    /*@__MANGLE_PROP__*/ /*@__PURE__*/ $bindings$.set(context, obj);\n    return obj;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT3JnYW5pY1R5cGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJPcmdhbmljVHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3Q0FBd0M7QUFFeEMsYUFBYSxDQUFDLE1BQU0sQ0FBTixJQUFZLElBT3pCO0FBUGEsV0FBWSxJQUFJO0lBQzFCLHlCQUFpQixDQUFBO0lBQ2pCLHlCQUFpQixDQUFBO0lBQ2pCLHlCQUFpQixDQUFBO0lBQ2pCLCtCQUF1QixDQUFBO0lBQ3ZCLDJCQUFtQixDQUFBO0lBQ25CLHVCQUFlLENBQUE7QUFDbkIsQ0FBQyxFQVB5QixJQUFJLEtBQUosSUFBSSxRQU83QjtBQUVELEVBQUU7QUFDRixvQkFBb0IsQ0FBQyxNQUFNLEtBQUssR0FBSSxvQkFBb0IsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDeEUsb0JBQW9CLENBQUMsTUFBTSxNQUFNLEdBQUcsb0JBQW9CLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQ3pFLG9CQUFvQixDQUFDLE1BQU0sTUFBTSxHQUFHLG9CQUFvQixDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUV6RSxvQkFBb0I7QUFDcEIsTUFBTSxDQUFDLE1BQU0sR0FBRyxHQUFHO0lBQ2Ysb0JBQW9CLENBQUMsSUFBSSxFQUFFLE1BQU07SUFDakMsb0JBQW9CLENBQUMsR0FBRyxFQUFFLEtBQUs7SUFDL0IsSUFBSSxFQUFFLE1BQU07SUFDWixJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUk7SUFDZixJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUk7SUFDZixJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUk7SUFDZixPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU87SUFDckIsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLO0NBQ3BCLENBQUE7QUFRQSxDQUFDO0FBRUYsRUFBRTtBQUNGLG9CQUFvQixDQUFDLGFBQWEsQ0FBQyxlQUFlLEdBQUcsQ0FBQztBQUN0RCxvQkFBb0IsQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFHLG9CQUFvQixDQUFDLElBQUksT0FBTyxFQUFZLENBQUM7QUFDMUcsb0JBQW9CLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBRyxDQUFDLE9BQVksRUFBRSxHQUFRLEVBQUUsRUFBRTtJQUN6RixJQUFJLENBQUM7UUFBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEdBQUcsQ0FBQztJQUFDLENBQUM7SUFBQyxPQUFNLENBQU0sRUFBRSxDQUFDO1FBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUFDLENBQUM7SUFBQSxDQUFDO0lBQ25FLG9CQUFvQixDQUFDLGFBQWEsQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLE9BQU8sRUFBRSxHQUFHLENBQUMsQ0FBQztJQUNoRSxPQUFPLEdBQUcsQ0FBQztBQUNmLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIi8vIGRlbm8tbGludC1pZ25vcmUtZmlsZSBuby1leHBsaWNpdC1hbnlcclxuXHJcbi8qQF9fUFVSRV9fKi8gZXhwb3J0IGVudW0gJE9SRyB7XHJcbiAgICB0eXBlID0gXCIhI3R5cGUjIVwiLFxyXG4gICAgdXVpZCA9IFwiISN1dWlkIyFcIixcclxuICAgIG5vZGUgPSBcIiEjbm9kZSMhXCIsXHJcbiAgICBwYXlsb2FkID0gXCIhI3BheWxvYWQjIVwiLFxyXG4gICAgaW5kZXggPSBcIiEjaW5kZXgjIVwiLFxyXG4gICAgZXhjID0gXCIhI2V4YyMhXCJcclxufVxyXG5cclxuLy9cclxuLypAX19NQU5HTEVfUFJPUF9fKi8gY29uc3QgJGV4YyQgID0gLypAX19NQU5HTEVfUFJPUF9fKi8gU3ltYm9sKFwiQGV4Y1wiKTtcclxuLypAX19NQU5HTEVfUFJPUF9fKi8gY29uc3QgJGRhdGEkID0gLypAX19NQU5HTEVfUFJPUF9fKi8gU3ltYm9sKFwiQGRhdGFcIik7XHJcbi8qQF9fTUFOR0xFX1BST1BfXyovIGNvbnN0ICRzeW5jJCA9IC8qQF9fTUFOR0xFX1BST1BfXyovIFN5bWJvbChcIkBzeW5jXCIpO1xyXG5cclxuLypAX19NQU5HTEVfUFJPUF9fKi8gXHJcbmV4cG9ydCBjb25zdCBPUkcgPSB7XHJcbiAgICAvKkBfX01BTkdMRV9QUk9QX18qLyBzeW5jOiAkc3luYyQsXHJcbiAgICAvKkBfX01BTkdMRV9QUk9QX18qLyBleGM6ICRleGMkLFxyXG4gICAgZGF0YTogJGRhdGEkLFxyXG4gICAgdHlwZTogJE9SRy50eXBlLFxyXG4gICAgdXVpZDogJE9SRy51dWlkLFxyXG4gICAgbm9kZTogJE9SRy5ub2RlLFxyXG4gICAgcGF5bG9hZDogJE9SRy5wYXlsb2FkLFxyXG4gICAgaW5kZXg6ICRPUkcuaW5kZXhcclxufVxyXG5cclxuLypAX19QVVJFX18qLyBleHBvcnQgaW50ZXJmYWNlIElNZXRhIHtcclxuICAgIFskT1JHLnV1aWRdPzogc3RyaW5nO1xyXG4gICAgWyRPUkcudHlwZV0/OiBzdHJpbmc7XHJcbiAgICBbJE9SRy5ub2RlXT86IHVua25vd247XHJcbiAgICBbJE9SRy5wYXlsb2FkXT86IHVua25vd247XHJcbiAgICBbJE9SRy5pbmRleF0/OiBudW1iZXI7XHJcbn07XHJcblxyXG4vL1xyXG4vKkBfX01BTkdMRV9QUk9QX18qLyAvKkBfX1BVUkVfXyovIGV4cG9ydCBkZWZhdWx0IE9SRztcclxuLypAX19NQU5HTEVfUFJPUF9fKi8gLypAX19QVVJFX18qLyBleHBvcnQgY29uc3QgJGJpbmRpbmdzJCA9IC8qQF9fTUFOR0xFX1BST1BfXyovIG5ldyBXZWFrTWFwPGFueSwgYW55PigpO1xyXG4vKkBfX01BTkdMRV9QUk9QX18qLyAvKkBfX1BVUkVfXyovIGV4cG9ydCBjb25zdCBiaW5kV2l0aENvbnRleHQgPSAoY29udGV4dDogYW55LCBvYmo6IGFueSkgPT4ge1xyXG4gICAgdHJ5IHsgY29udGV4dFtPUkcuZXhjXSA9IG9iajsgfSBjYXRjaChlOiBhbnkpIHsgY29uc29sZS53YXJuKGUpOyB9O1xyXG4gICAgLypAX19NQU5HTEVfUFJPUF9fKi8gLypAX19QVVJFX18qLyAkYmluZGluZ3MkLnNldChjb250ZXh0LCBvYmopO1xyXG4gICAgcmV0dXJuIG9iajtcclxufVxyXG4iXX0=","// deno-lint-ignore-file no-explicit-any\nimport { UUIDv4 } from \"./Useful\";\n/*@__NOINLINE__*/ const rg = \"register\";\n/*@__MANGLE_PROP__*/ const timers = /*@__MANGLE_PROP__*/ new WeakMap(), tmpSet = new Set();\nexport const hold = (tmp, timeout = 1000) => {\n    // holding from GC\n    /*@__MANGLE_PROP__*/\n    if (typeof tmp == \"object\" || typeof tmp == \"function\") {\n        const obj = tmp?.deref?.() ?? tmp;\n        if (!tmpSet.has(obj)) {\n            tmpSet.add(obj);\n            timers.set(obj, setTimeout((obj) => { return tmpSet.delete(obj); }, timeout, obj));\n        }\n    }\n    //\n    return tmp?.deref?.() ?? tmp;\n};\n// TODO: planned promised...\n/*@__MANGLE_PROP__*/ /*@__PURE___*/\nexport default class UUIDMap {\n    /*@__MANGLE_PROP__*/ #weakMap = /*@__MANGLE_PROP__*/ new WeakMap();\n    /*@__MANGLE_PROP__*/ #refMap = /*@__MANGLE_PROP__*/ new Map();\n    /*@__MANGLE_PROP__*/ #registry = /*@__MANGLE_PROP__*/ new FinalizationRegistry((_) => { });\n    //\n    constructor() {\n        /*@__MANGLE_PROP__*/ this.#weakMap = /*@__MANGLE_PROP__*/ new WeakMap();\n        /*@__MANGLE_PROP__*/ this.#refMap = /*@__MANGLE_PROP__*/ new Map();\n        /*@__MANGLE_PROP__*/ this.#registry = /*@__MANGLE_PROP__*/ new FinalizationRegistry((key) => {\n            this.#refMap.delete(key);\n        });\n    }\n    // when transfer out required\n    delete(key) {\n        if (typeof key == \"object\" || typeof key == \"function\") {\n            return this.#weakMap.delete(key);\n        }\n        return this.#refMap.delete(key);\n    }\n    //\n    add(obj, id = \"\", force = false) {\n        if (!(typeof obj == \"object\" || typeof obj == \"function\"))\n            return obj;\n        // never override already added, except transfer cases\n        if (id && this.#refMap.has(id) && !force) {\n            return id;\n        }\n        ;\n        //\n        if (this.#weakMap.has(obj)) {\n            return this.#weakMap.get(obj);\n        }\n        //\n        this.#weakMap.set(obj, (id ||= UUIDv4()));\n        this.#refMap.set(id, new WeakRef(hold(obj, 1000)));\n        this.#registry?.[rg]?.(obj, id);\n        //\n        return id;\n    }\n    //\n    get(key) {\n        if (typeof key == \"object\" || typeof key == \"function\") {\n            return this.#weakMap.get(key);\n        }\n        return hold(this.#refMap.get(key));\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVVVJRE1hcC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlVVSURNYXAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsd0NBQXdDO0FBQ3hDLE9BQU8sRUFBRSxNQUFNLEVBQW9CLE1BQU0sVUFBVSxDQUFDO0FBQ3BELGlCQUFpQixDQUFDLE1BQU0sRUFBRSxHQUFHLFVBQVUsQ0FBQztBQUV4QyxvQkFBb0IsQ0FBQyxNQUFNLE1BQU0sR0FBRyxvQkFBb0IsQ0FBQyxJQUFJLE9BQU8sRUFBRSxFQUFFLE1BQU0sR0FBRyxJQUFJLEdBQUcsRUFBRSxDQUFDO0FBQzNGLE1BQU0sQ0FBQyxNQUFNLElBQUksR0FBRyxDQUFDLEdBQWlDLEVBQUUsT0FBTyxHQUFHLElBQUksRUFBQyxFQUFFO0lBRXJFLGtCQUFrQjtJQUNsQixvQkFBb0I7SUFDcEIsSUFBSSxPQUFPLEdBQUcsSUFBSSxRQUFRLElBQUksT0FBTyxHQUFHLElBQUksVUFBVSxFQUFFLENBQUM7UUFDckQsTUFBTSxHQUFHLEdBQUcsR0FBRyxFQUFFLEtBQUssRUFBRSxFQUFFLElBQUksR0FBRyxDQUFDO1FBQ2xDLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUM7WUFDbkIsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNoQixNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxVQUFVLENBQ3RCLENBQUMsR0FBRyxFQUFFLEVBQUUsR0FBRyxPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQ3ZDLE9BQU8sRUFDUCxHQUFHLENBQ04sQ0FBQyxDQUFDO1FBQ1AsQ0FBQztJQUNMLENBQUM7SUFFRCxFQUFFO0lBQ0YsT0FBTyxHQUFHLEVBQUUsS0FBSyxFQUFFLEVBQUUsSUFBSSxHQUFHLENBQUM7QUFDakMsQ0FBQyxDQUFBO0FBRUQsNEJBQTRCO0FBQzVCLG9CQUFvQixDQUFDLGNBQWM7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QUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbIi8vIGRlbm8tbGludC1pZ25vcmUtZmlsZSBuby1leHBsaWNpdC1hbnlcclxuaW1wb3J0IHsgVVVJRHY0LCB0eXBlIGRULCB0eXBlIHJUIH0gZnJvbSBcIi4vVXNlZnVsXCI7XHJcbi8qQF9fTk9JTkxJTkVfXyovIGNvbnN0IHJnID0gXCJyZWdpc3RlclwiO1xyXG5cclxuLypAX19NQU5HTEVfUFJPUF9fKi8gY29uc3QgdGltZXJzID0gLypAX19NQU5HTEVfUFJPUF9fKi8gbmV3IFdlYWtNYXAoKSwgdG1wU2V0ID0gbmV3IFNldCgpO1xyXG5leHBvcnQgY29uc3QgaG9sZCA9ICh0bXA6IGFueSB8IHVua25vd24gfCBXZWFrUmVmPGFueT4sIHRpbWVvdXQgPSAxMDAwKT0+e1xyXG5cclxuICAgIC8vIGhvbGRpbmcgZnJvbSBHQ1xyXG4gICAgLypAX19NQU5HTEVfUFJPUF9fKi9cclxuICAgIGlmICh0eXBlb2YgdG1wID09IFwib2JqZWN0XCIgfHwgdHlwZW9mIHRtcCA9PSBcImZ1bmN0aW9uXCIpIHtcclxuICAgICAgICBjb25zdCBvYmogPSB0bXA/LmRlcmVmPy4oKSA/PyB0bXA7XHJcbiAgICAgICAgaWYgKCF0bXBTZXQuaGFzKG9iaikpIHtcclxuICAgICAgICAgICAgdG1wU2V0LmFkZChvYmopO1xyXG4gICAgICAgICAgICB0aW1lcnMuc2V0KG9iaiwgc2V0VGltZW91dChcclxuICAgICAgICAgICAgICAgIChvYmopID0+IHsgcmV0dXJuIHRtcFNldC5kZWxldGUob2JqKTsgfSxcclxuICAgICAgICAgICAgICAgIHRpbWVvdXQsXHJcbiAgICAgICAgICAgICAgICBvYmpcclxuICAgICAgICAgICAgKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vXHJcbiAgICByZXR1cm4gdG1wPy5kZXJlZj8uKCkgPz8gdG1wO1xyXG59XHJcblxyXG4vLyBUT0RPOiBwbGFubmVkIHByb21pc2VkLi4uXHJcbi8qQF9fTUFOR0xFX1BST1BfXyovIC8qQF9fUFVSRV9fXyovIFxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVVUlETWFwPFQ9ZFQ+IHtcclxuICAgIC8qQF9fTUFOR0xFX1BST1BfXyovICN3ZWFrTWFwICA9IC8qQF9fTUFOR0xFX1BST1BfXyovIG5ldyBXZWFrTWFwPGRULCBzdHJpbmc+KCk7XHJcbiAgICAvKkBfX01BTkdMRV9QUk9QX18qLyAjcmVmTWFwICAgPSAvKkBfX01BTkdMRV9QUk9QX18qLyBuZXcgTWFwPHN0cmluZywgclQ+KCk7XHJcbiAgICAvKkBfX01BTkdMRV9QUk9QX18qLyAjcmVnaXN0cnkgPSAvKkBfX01BTkdMRV9QUk9QX18qLyBuZXcgRmluYWxpemF0aW9uUmVnaXN0cnk8c3RyaW5nPigoXzogc3RyaW5nKSA9PiB7fSk7XHJcblxyXG4gICAgLy9cclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIC8qQF9fTUFOR0xFX1BST1BfXyovIHRoaXMuI3dlYWtNYXAgID0gLypAX19NQU5HTEVfUFJPUF9fKi8gbmV3IFdlYWtNYXA8ZFQsIHN0cmluZz4oKTtcclxuICAgICAgICAvKkBfX01BTkdMRV9QUk9QX18qLyB0aGlzLiNyZWZNYXAgICA9IC8qQF9fTUFOR0xFX1BST1BfXyovIG5ldyBNYXA8c3RyaW5nLCByVD4oKTtcclxuICAgICAgICAvKkBfX01BTkdMRV9QUk9QX18qLyB0aGlzLiNyZWdpc3RyeSA9IC8qQF9fTUFOR0xFX1BST1BfXyovIG5ldyBGaW5hbGl6YXRpb25SZWdpc3RyeTxzdHJpbmc+KChrZXk6IHN0cmluZykgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLiNyZWZNYXAuZGVsZXRlKGtleSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gd2hlbiB0cmFuc2ZlciBvdXQgcmVxdWlyZWRcclxuICAgIGRlbGV0ZTxSIGV4dGVuZHMgZFQgfCBzdHJpbmc+KGtleTogUik6IHVua25vd24ge1xyXG4gICAgICAgIGlmICh0eXBlb2Yga2V5ID09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGtleSA9PSBcImZ1bmN0aW9uXCIpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuI3dlYWtNYXAuZGVsZXRlKDxkVD4oPHVua25vd24+a2V5KSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0aGlzLiNyZWZNYXAuZGVsZXRlKDxzdHJpbmc+KDx1bmtub3duPmtleSkpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vXHJcbiAgICBhZGQob2JqOiBkVCwgaWQ6IHN0cmluZyA9IFwiXCIsIGZvcmNlID0gZmFsc2UpIHtcclxuICAgICAgICBpZiAoISh0eXBlb2Ygb2JqID09IFwib2JqZWN0XCIgfHwgdHlwZW9mIG9iaiA9PSBcImZ1bmN0aW9uXCIpKSByZXR1cm4gb2JqO1xyXG5cclxuICAgICAgICAvLyBuZXZlciBvdmVycmlkZSBhbHJlYWR5IGFkZGVkLCBleGNlcHQgdHJhbnNmZXIgY2FzZXNcclxuICAgICAgICBpZiAoaWQgJiYgdGhpcy4jcmVmTWFwLmhhcyhpZCkgJiYgIWZvcmNlKSB7IHJldHVybiBpZDsgfTtcclxuXHJcbiAgICAgICAgLy9cclxuICAgICAgICBpZiAodGhpcy4jd2Vha01hcC5oYXMob2JqKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy4jd2Vha01hcC5nZXQob2JqKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vXHJcbiAgICAgICAgdGhpcy4jd2Vha01hcC5zZXQob2JqLCAoaWQgfHw9IFVVSUR2NCgpKSk7XHJcbiAgICAgICAgdGhpcy4jcmVmTWFwLnNldChpZCwgbmV3IFdlYWtSZWY8ZFQ+KCAgaG9sZChvYmosIDEwMDApICApKTtcclxuICAgICAgICB0aGlzLiNyZWdpc3RyeT8uW3JnXT8uKG9iaiwgaWQpO1xyXG5cclxuICAgICAgICAvL1xyXG4gICAgICAgIHJldHVybiBpZDtcclxuICAgIH1cclxuXHJcbiAgICAvL1xyXG4gICAgZ2V0PFIgZXh0ZW5kcyBkVCB8IHN0cmluZz4oa2V5OiBSKTogdW5rbm93biB7XHJcbiAgICAgICAgaWYgKHR5cGVvZiBrZXkgPT0gXCJvYmplY3RcIiB8fCB0eXBlb2Yga2V5ID09IFwiZnVuY3Rpb25cIikge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy4jd2Vha01hcC5nZXQoPGRUPig8dW5rbm93bj5rZXkpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGhvbGQodGhpcy4jcmVmTWFwLmdldCg8c3RyaW5nPig8dW5rbm93bj5rZXkpKSk7XHJcbiAgICB9XHJcbn1cclxuIl19","// deno-lint-ignore-file no-explicit-any ban-types\nimport { PMS, TS } from \"./Alias\";\nimport ORG, { $bindings$ } from \"./OrganicType\";\n/*@__MANGLE_PROP__*/ export const UUIDv4 = () => {\n    return (crypto?.randomUUID ? crypto?.randomUUID() : (\"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c => (+c ^ (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (+c / 4)))).toString(16))));\n};\n/*\n * Internal types of meta\n * [\"@meta\"|\"@data\"]: {\n *   !type: string, // interpretation type (how will resolved)\n *   !uuid: string, // located in remote storage pool\n *   !payload: any, // additional descriptions\n *   !index: number // located in transferable list\n * }\n */\n// If someone not in list, will just copy or sharing\n// @ts-ignore \"Transferable list for web workers (automatic)\"\n/*@__MANGLE_PROP__*/ /*@__PURE__*/\nexport const Transferable = [\n    /* @ts-ignore \"\" */ /*@__MANGLE_PROP__*/ /*@__PURE__*/ typeof ArrayBuffer != TS.udf ? ArrayBuffer : null,\n    /* @ts-ignore \"\" */ /*@__MANGLE_PROP__*/ /*@__PURE__*/ typeof MessagePort != TS.udf ? MessagePort : null,\n    /* @ts-ignore \"\" */ /*@__MANGLE_PROP__*/ /*@__PURE__*/ typeof ReadableStream != TS.udf ? ReadableStream : null,\n    /* @ts-ignore \"\" */ /*@__MANGLE_PROP__*/ /*@__PURE__*/ typeof WritableStream != TS.udf ? WritableStream : null,\n    /* @ts-ignore \"\" */ /*@__MANGLE_PROP__*/ /*@__PURE__*/ typeof TransformStream != TS.udf ? TransformStream : null,\n    /* @ts-ignore \"\" */ /*@__MANGLE_PROP__*/ /*@__PURE__*/ typeof WebTransportReceiveStream != TS.udf ? WebTransportReceiveStream : null,\n    /* @ts-ignore \"\" */ /*@__MANGLE_PROP__*/ /*@__PURE__*/ typeof WebTransportSendStream != TS.udf ? WebTransportSendStream : null,\n    /* @ts-ignore \"\" */ /*@__MANGLE_PROP__*/ /*@__PURE__*/ typeof AudioData != TS.udf ? AudioData : null,\n    /* @ts-ignore \"\" */ /*@__MANGLE_PROP__*/ /*@__PURE__*/ typeof ImageBitmap != TS.udf ? ImageBitmap : null,\n    /* @ts-ignore \"\" */ /*@__MANGLE_PROP__*/ /*@__PURE__*/ typeof VideoFrame != TS.udf ? VideoFrame : null,\n    /* @ts-ignore \"\" */ /*@__MANGLE_PROP__*/ /*@__PURE__*/ typeof OffscreenCanvas != TS.udf ? OffscreenCanvas : null,\n    /* @ts-ignore \"\" */ /*@__MANGLE_PROP__*/ /*@__PURE__*/ typeof RTCDataChannel != TS.udf ? RTCDataChannel : null\n].filter((E) => (E != null));\n/*@__MANGLE_PROP__*/ export const isSymbol = (sym) => (typeof sym === 'symbol' || typeof sym == 'object' && Object.prototype.toString.call(sym) == '[object Symbol]');\n/*@__MANGLE_PROP__*/ export const FORBIDDEN_KEYS = new Set([\"bind\", \"toString\", \"then\", \"catch\", \"finally\"]);\n/*@__MANGLE_PROP__*/ export const META_KEYS = new Set(Array.from(Object.values(ORG)));\n/*@__MANGLE_PROP__*/ export const wrapExChanger = (exChanger) => {\n    if (!exChanger)\n        return null;\n    //\n    return new Proxy(exChanger, {\n        get(target, prop) {\n            if (prop == ORG.sync) {\n                return target.sync;\n            }\n            ;\n            if (prop == ORG.exc) {\n                return target;\n            }\n            ;\n            if ( // forbidden actions\n            isSymbol(prop) ||\n                FORBIDDEN_KEYS.has(prop) ||\n                META_KEYS?.has?.(prop)) {\n                return null;\n            }\n            ;\n            return target?.access?.(prop);\n        },\n        set(target, prop, value) {\n            return target?.register?.(value, prop);\n        }\n    });\n};\n/*@__MANGLE_PROP__*/ export const isPromise = (target) => {\n    return target instanceof PMS || target?.then != null && typeof target?.then == \"function\";\n};\n/*@__MANGLE_PROP__*/ export const doOnlyAfterResolve = (meta, cb) => {\n    if (isPromise(meta)) {\n        const chain = meta?.then?.(cb)?.catch?.(console.trace.bind(console)) ?? cb(meta);\n        //console.trace(chain);\n        return chain;\n    }\n    return cb(meta);\n};\nexport const getContext = (wModule) => {\n    return doOnlyAfterResolve(wModule, (mx) => {\n        return wrapExChanger(mx?.[ORG.exc] ?? $bindings$?.get?.(mx) ?? mx);\n    });\n};\nexport const doTransfer = (wModule, name, node = null) => {\n    return doOnlyAfterResolve(wModule, (mx) => {\n        const exChanger = mx?.[ORG.exc] ?? $bindings$?.get?.(mx) ?? mx;\n        return exChanger?.doTransfer?.(name, node);\n    });\n};\nexport const transfer = (wModule, node = null, name = \"\") => {\n    return doOnlyAfterResolve(wModule, (mx) => {\n        const exChanger = mx?.[ORG.exc] ?? $bindings$?.get?.(mx) ?? mx;\n        return exChanger?.transfer?.(node, name);\n    });\n};\nexport { ORG };\n//# sourceMappingURL=data:application/json;base64,","var map = {\n\t\"./ExChanger\": 797,\n\t\"./ExChanger.ts\": 797,\n\t\"./FLOW\": 916,\n\t\"./FLOW.ts\": 916,\n\t\"./MessageChannel\": 234,\n\t\"./MessageChannel.ts\": 234\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(() => {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 262;\nmodule.exports = webpackAsyncContext;","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 65;\nmodule.exports = webpackEmptyAsyncContext;","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"./deps/\" + chunkId + \".mjs\";\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// deno-lint-ignore-file no-explicit-any\nexport const makeModuleLoader = (exChanger, altName = \"!!import!!\") => {\n    // make import loader support\n    exChanger?.register?.((src = \"\") => {\n        return import(src)?.then(async ($m) => {\n            const { wrapExChanger, transfer, doTransfer } = await import(\"../Library/Utils/Useful\");\n            if (typeof $m?.importContext == \"function\") {\n                $m?.importContext?.(wrapExChanger(exChanger), {\n                    transfer, doTransfer\n                });\n            }\n            return $m;\n        });\n    }, altName || \"!!import!!\");\n    return exChanger;\n};\nexport default makeModuleLoader;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWFrZUxvYWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIk1ha2VMb2FkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsd0NBQXdDO0FBQ3hDLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFHLENBQUMsU0FBYyxFQUFFLFVBQWtCLFlBQVksRUFBQyxFQUFFO0lBQzlFLDZCQUE2QjtJQUM3QixTQUFTLEVBQUUsUUFBUSxFQUFFLENBQUMsQ0FBQyxNQUFjLEVBQUUsRUFBZ0IsRUFBRTtRQUNyRCxPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRSxJQUFJLENBQUMsS0FBSyxFQUFFLEVBQUUsRUFBQyxFQUFFO1lBQ2pDLE1BQU0sRUFBRSxhQUFhLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBRSxHQUFHLE1BQU0sTUFBTSxDQUFDLHlCQUF5QixDQUFDLENBQUM7WUFDeEYsSUFBSSxPQUFPLEVBQUUsRUFBRSxhQUFhLElBQUksVUFBVSxFQUFFLENBQUM7Z0JBQUMsRUFBRSxFQUFFLGFBQWEsRUFBRSxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsRUFBRTtvQkFDeEYsUUFBUSxFQUFFLFVBQVU7aUJBQ3ZCLENBQUMsQ0FBQztZQUFDLENBQUM7WUFDTCxPQUFPLEVBQUUsQ0FBQztRQUNkLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQyxFQUFFLE9BQU8sSUFBSSxZQUFZLENBQUMsQ0FBQztJQUM1QixPQUFPLFNBQVMsQ0FBQztBQUNyQixDQUFDLENBQUE7QUFDRCxlQUFlLGdCQUFnQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZGVuby1saW50LWlnbm9yZS1maWxlIG5vLWV4cGxpY2l0LWFueVxyXG5leHBvcnQgY29uc3QgbWFrZU1vZHVsZUxvYWRlciA9IChleENoYW5nZXI6IGFueSwgYWx0TmFtZTogc3RyaW5nID0gXCIhIWltcG9ydCEhXCIpPT57XHJcbiAgICAvLyBtYWtlIGltcG9ydCBsb2FkZXIgc3VwcG9ydFxyXG4gICAgZXhDaGFuZ2VyPy5yZWdpc3Rlcj8uKChzcmM6IHN0cmluZyA9IFwiXCIpOiBQcm9taXNlPGFueT4gPT4ge1xyXG4gICAgICAgIHJldHVybiBpbXBvcnQoc3JjKT8udGhlbihhc3luYyAoJG0pPT57XHJcbiAgICAgICAgICAgIGNvbnN0IHsgd3JhcEV4Q2hhbmdlciwgdHJhbnNmZXIsIGRvVHJhbnNmZXIgfSA9IGF3YWl0IGltcG9ydChcIi4uL0xpYnJhcnkvVXRpbHMvVXNlZnVsXCIpO1xyXG4gICAgICAgICAgICBpZiAodHlwZW9mICRtPy5pbXBvcnRDb250ZXh0ID09IFwiZnVuY3Rpb25cIikgeyAkbT8uaW1wb3J0Q29udGV4dD8uKHdyYXBFeENoYW5nZXIoZXhDaGFuZ2VyKSwge1xyXG4gICAgICAgICAgICAgICAgdHJhbnNmZXIsIGRvVHJhbnNmZXJcclxuICAgICAgICAgICAgfSk7IH1cclxuICAgICAgICAgICAgcmV0dXJuICRtO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSwgYWx0TmFtZSB8fCBcIiEhaW1wb3J0ISFcIik7XHJcbiAgICByZXR1cm4gZXhDaGFuZ2VyO1xyXG59XHJcbmV4cG9ydCBkZWZhdWx0IG1ha2VNb2R1bGVMb2FkZXI7XHJcbiJdfQ==","// deno-lint-ignore-file\n// !should to be compiled as worker entry!\nimport exChanger from \"../$core$/Workers/ExChangerUnit\";\nimport makeModuleLoader from \"../$core$/Workers/MakeLoader\";\nexport const moduleLoader = makeModuleLoader(exChanger);\nexport default moduleLoader;\nexport { exChanger };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3QkFBd0I7QUFDeEIsMENBQTBDO0FBQzFDLE9BQU8sU0FBUyxNQUFNLGlDQUFpQyxDQUFDO0FBQ3hELE9BQU8sZ0JBQWdCLE1BQU0sOEJBQThCLENBQUM7QUFDNUQsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLGdCQUFnQixDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBQ3hELGVBQWUsWUFBWSxDQUFDO0FBQzVCLE9BQU8sRUFBQyxTQUFTLEVBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGRlbm8tbGludC1pZ25vcmUtZmlsZVxyXG4vLyAhc2hvdWxkIHRvIGJlIGNvbXBpbGVkIGFzIHdvcmtlciBlbnRyeSFcclxuaW1wb3J0IGV4Q2hhbmdlciBmcm9tIFwiLi4vJGNvcmUkL1dvcmtlcnMvRXhDaGFuZ2VyVW5pdFwiO1xyXG5pbXBvcnQgbWFrZU1vZHVsZUxvYWRlciBmcm9tIFwiLi4vJGNvcmUkL1dvcmtlcnMvTWFrZUxvYWRlclwiO1xyXG5leHBvcnQgY29uc3QgbW9kdWxlTG9hZGVyID0gbWFrZU1vZHVsZUxvYWRlcihleENoYW5nZXIpO1xyXG5leHBvcnQgZGVmYXVsdCBtb2R1bGVMb2FkZXI7XHJcbmV4cG9ydCB7ZXhDaGFuZ2VyfTtcclxuIl19","// Web Worker Unit...\n//import ExChanger from \"../Library/FLOW/ExChanger\";\nimport ExChanger from \"../Library/FLOW/ExChanger\";\nexport default (new ExChanger(self)).initialize();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXhDaGFuZ2VyVW5pdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkV4Q2hhbmdlclVuaXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEscUJBQXFCO0FBQ3JCLG9EQUFvRDtBQUNwRCxPQUFPLFNBQVMsTUFBTSwyQkFBMkIsQ0FBQztBQUNsRCxlQUFlLENBQUMsSUFBSSxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFdlYiBXb3JrZXIgVW5pdC4uLlxyXG4vL2ltcG9ydCBFeENoYW5nZXIgZnJvbSBcIi4uL0xpYnJhcnkvRkxPVy9FeENoYW5nZXJcIjtcclxuaW1wb3J0IEV4Q2hhbmdlciBmcm9tIFwiLi4vTGlicmFyeS9GTE9XL0V4Q2hhbmdlclwiO1xyXG5leHBvcnQgZGVmYXVsdCAobmV3IEV4Q2hhbmdlcihzZWxmKSkuaW5pdGlhbGl6ZSgpO1xyXG4iXX0=","// deno-lint-ignore-file no-explicit-any\nimport { $moduleLoader } from \"./loader\";\nimport { $wrapPromise } from \"../$core$/Library/Handlers/PromiseHandler\";\n// wrapper of module loader (with Proxy)\nexport const moduleLoader = (source = \"\") => {\n    return /*@__MANGLE_PROP__*/ $wrapPromise(import(\"../$worker$/code\")?.then?.(async (worker) => {\n        return /*@__MANGLE_PROP__*/ $moduleLoader(source, await (worker?.default || \"\"))?.catch?.(console.trace.bind(console));\n    }));\n};\n//\nimport ORG from \"../$core$/Library/Utils/OrganicType\";\nexport const sync = ORG.sync;\nexport { getContext, transfer, doTransfer } from \"../$core$/Library/Utils/Useful\";\n//\n//, { ORG }export * from \"./utils\";\n//export * from \"./utils.ts\";\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3Q0FBd0M7QUFDeEMsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFHLE1BQU0sMkNBQTJDLENBQUM7QUFFMUUsd0NBQXdDO0FBQ3hDLE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBRyxDQUFvQixTQUFpQixFQUFFLEVBQUMsRUFBRTtJQUNsRSxPQUFPLG9CQUFvQixDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsa0JBQWtCLENBQUMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxLQUFLLEVBQUUsTUFBVyxFQUFDLEVBQUU7UUFDN0YsT0FBTyxvQkFBb0IsQ0FBQyxhQUFhLENBQUksTUFBTSxFQUFFLE1BQU0sQ0FBQyxNQUFNLEVBQUUsT0FBTyxJQUFJLEVBQUUsQ0FBQyxDQUFDLEVBQUUsS0FBSyxFQUFFLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztJQUM5SCxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ1IsQ0FBQyxDQUFBO0FBRUQsRUFBRTtBQUNGLE9BQU8sR0FBRyxNQUFNLHFDQUFxQyxDQUFDO0FBQ3RELE1BQU0sQ0FBQyxNQUFNLElBQUksR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDO0FBQzdCLE9BQU8sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBR2xGLEVBQUU7QUFDRixtQ0FBbUM7QUFDbkMsNkJBQTZCIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZGVuby1saW50LWlnbm9yZS1maWxlIG5vLWV4cGxpY2l0LWFueVxyXG5pbXBvcnQgeyAkbW9kdWxlTG9hZGVyIH0gZnJvbSBcIi4vbG9hZGVyXCI7XHJcbmltcG9ydCB7ICR3cmFwUHJvbWlzZSAgfSBmcm9tIFwiLi4vJGNvcmUkL0xpYnJhcnkvSGFuZGxlcnMvUHJvbWlzZUhhbmRsZXJcIjtcclxuXHJcbi8vIHdyYXBwZXIgb2YgbW9kdWxlIGxvYWRlciAod2l0aCBQcm94eSlcclxuZXhwb3J0IGNvbnN0IG1vZHVsZUxvYWRlciA9IDxUIGV4dGVuZHMgdW5rbm93bj4oc291cmNlOiBzdHJpbmcgPSBcIlwiKT0+e1xyXG4gICAgcmV0dXJuIC8qQF9fTUFOR0xFX1BST1BfXyovICR3cmFwUHJvbWlzZShpbXBvcnQoXCIuLi8kd29ya2VyJC9jb2RlXCIpPy50aGVuPy4oYXN5bmMgKHdvcmtlcjogYW55KT0+e1xyXG4gICAgICAgIHJldHVybiAvKkBfX01BTkdMRV9QUk9QX18qLyAkbW9kdWxlTG9hZGVyPFQ+KHNvdXJjZSwgYXdhaXQgKHdvcmtlcj8uZGVmYXVsdCB8fCBcIlwiKSk/LmNhdGNoPy4oY29uc29sZS50cmFjZS5iaW5kKGNvbnNvbGUpKTtcclxuICAgIH0pKTtcclxufVxyXG5cclxuLy9cclxuaW1wb3J0IE9SRyBmcm9tIFwiLi4vJGNvcmUkL0xpYnJhcnkvVXRpbHMvT3JnYW5pY1R5cGVcIjtcclxuZXhwb3J0IGNvbnN0IHN5bmMgPSBPUkcuc3luYztcclxuZXhwb3J0IHsgZ2V0Q29udGV4dCwgdHJhbnNmZXIsIGRvVHJhbnNmZXIgfSBmcm9tIFwiLi4vJGNvcmUkL0xpYnJhcnkvVXRpbHMvVXNlZnVsXCI7XHJcblxyXG5cclxuLy9cclxuLy8sIHsgT1JHIH1leHBvcnQgKiBmcm9tIFwiLi91dGlsc1wiO1xyXG4vL2V4cG9ydCAqIGZyb20gXCIuL3V0aWxzLnRzXCI7XHJcbiJdfQ==","// deno-lint-ignore-file no-explicit-any\nimport TS from \"../$core$/Library/Utils/Alias\";\n/*@__MANGLE_PROP__*/ /*@__PURE__*/\nconst loadWorker = (WX) => {\n    /*@__PURE__*/ if (WX instanceof Worker) {\n        return WX;\n    }\n    else \n    /*@__PURE__*/ if (typeof WX == \"function\") {\n        return new WX();\n    }\n    else \n    /*@__PURE__*/ if (typeof WX == \"string\") {\n        if (URL.canParse(WX)) {\n            return new Worker(WX, { type: \"module\" });\n        }\n        ;\n        return new Worker(URL.createObjectURL(new Blob([WX], { type: \"application/javascript\" })), { type: \"module\" });\n    }\n    else \n    /*@__PURE__*/ if (WX instanceof Blob || WX instanceof File) {\n        return new Worker(URL.createObjectURL(WX), { type: \"module\" });\n    }\n    /*@__PURE__*/ return (typeof self != TS.udf ? self : null);\n};\n/*@__MANGLE_PROP__*/\nexport const $moduleLoader = async (moduleSource, workerCode = \"\") => {\n    if (!moduleSource || typeof moduleSource != \"string\")\n        throw new Error(\"Invalid module source\");\n    // if url too long, un-compress code\n    const uWorker = loadWorker(workerCode);\n    const EXChanger = (await import(\"../$core$/Library/FLOW/ExChanger\")).default;\n    const exChanger = new EXChanger(uWorker)?.initialize?.();\n    const module = await (await exChanger?.access?.(\"!!import!!\"))?.(moduleSource);\n    return module;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibG9hZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdDQUF3QztBQUN4QyxPQUFPLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUUvQyxvQkFBb0IsQ0FBQyxhQUFhO0FBQ2xDLE1BQU0sVUFBVSxHQUFHLENBQUMsRUFBTyxFQUFlLEVBQUU7SUFDeEMsYUFBYSxDQUFDLElBQUksRUFBRSxZQUFZLE1BQU0sRUFBRSxDQUFDO1FBQUMsT0FBTyxFQUFFLENBQUM7SUFBQyxDQUFDOztJQUN0RCxhQUFhLENBQUMsSUFBSSxPQUFPLEVBQUUsSUFBSSxVQUFVLEVBQUUsQ0FBQztRQUFDLE9BQU8sSUFBSSxFQUFFLEVBQUUsQ0FBQztJQUFDLENBQUM7O0lBQy9ELGFBQWEsQ0FBQyxJQUFJLE9BQU8sRUFBRSxJQUFJLFFBQVEsRUFBRSxDQUFDO1FBQ3RDLElBQUksR0FBRyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDO1lBQUMsT0FBTyxJQUFJLE1BQU0sQ0FBQyxFQUFFLEVBQUUsRUFBQyxJQUFJLEVBQUUsUUFBUSxFQUFDLENBQUMsQ0FBQztRQUFDLENBQUM7UUFBQSxDQUFDO1FBQ25FLE9BQU8sSUFBSSxNQUFNLENBQUMsR0FBRyxDQUFDLGVBQWUsQ0FBQyxJQUFJLElBQUksQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUMsSUFBSSxFQUFFLHdCQUF3QixFQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUMsSUFBSSxFQUFFLFFBQVEsRUFBQyxDQUFDLENBQUM7SUFDL0csQ0FBQzs7SUFDRCxhQUFhLENBQUMsSUFBSSxFQUFFLFlBQVksSUFBSSxJQUFJLEVBQUUsWUFBWSxJQUFJLEVBQUUsQ0FBQztRQUFDLE9BQU8sSUFBSSxNQUFNLENBQUMsR0FBRyxDQUFDLGVBQWUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFDLElBQUksRUFBRSxRQUFRLEVBQUMsQ0FBQyxDQUFDO0lBQUMsQ0FBQztJQUM3SCxhQUFhLENBQUMsT0FBTyxDQUFDLE9BQU8sSUFBSSxJQUFJLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFzQixDQUFDO0FBQ3BGLENBQUMsQ0FBQTtBQUVELG9CQUFvQjtBQUNwQixNQUFNLENBQUMsTUFBTSxhQUFhLEdBQUcsS0FBSyxFQUFxQixZQUFvQixFQUFFLGFBQXFCLEVBQUUsRUFBYyxFQUFFO0lBQ2hILElBQUksQ0FBQyxZQUFZLElBQUksT0FBTyxZQUFZLElBQUksUUFBUTtRQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsdUJBQXVCLENBQUMsQ0FBQztJQUUvRixvQ0FBb0M7SUFDcEMsTUFBTSxPQUFPLEdBQUssVUFBVSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ3pDLE1BQU0sU0FBUyxHQUFHLENBQUMsTUFBTSxNQUFNLENBQUMsa0NBQWtDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQztJQUM3RSxNQUFNLFNBQVMsR0FBRyxJQUFJLFNBQVMsQ0FBQyxPQUFPLENBQUMsRUFBRSxVQUFVLEVBQUUsRUFBRSxDQUFDO0lBQ3pELE1BQU0sTUFBTSxHQUFNLE1BQU0sQ0FBQyxNQUFNLFNBQVMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxZQUFZLENBQVMsQ0FBQSxFQUFFLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDekYsT0FBTyxNQUFNLENBQUM7QUFDbEIsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZGVuby1saW50LWlnbm9yZS1maWxlIG5vLWV4cGxpY2l0LWFueVxyXG5pbXBvcnQgVFMgZnJvbSBcIi4uLyRjb3JlJC9MaWJyYXJ5L1V0aWxzL0FsaWFzXCI7XHJcblxyXG4vKkBfX01BTkdMRV9QUk9QX18qLyAvKkBfX1BVUkVfXyovIFxyXG5jb25zdCBsb2FkV29ya2VyID0gKFdYOiBhbnkpOiBXb3JrZXJ8bnVsbCA9PntcclxuICAgIC8qQF9fUFVSRV9fKi8gaWYgKFdYIGluc3RhbmNlb2YgV29ya2VyKSB7IHJldHVybiBXWDsgfSBlbHNlXHJcbiAgICAvKkBfX1BVUkVfXyovIGlmICh0eXBlb2YgV1ggPT0gXCJmdW5jdGlvblwiKSB7IHJldHVybiBuZXcgV1goKTsgfSBlbHNlXHJcbiAgICAvKkBfX1BVUkVfXyovIGlmICh0eXBlb2YgV1ggPT0gXCJzdHJpbmdcIikge1xyXG4gICAgICAgIGlmIChVUkwuY2FuUGFyc2UoV1gpKSB7IHJldHVybiBuZXcgV29ya2VyKFdYLCB7dHlwZTogXCJtb2R1bGVcIn0pOyB9O1xyXG4gICAgICAgIHJldHVybiBuZXcgV29ya2VyKFVSTC5jcmVhdGVPYmplY3RVUkwobmV3IEJsb2IoW1dYXSwge3R5cGU6IFwiYXBwbGljYXRpb24vamF2YXNjcmlwdFwifSkpLCB7dHlwZTogXCJtb2R1bGVcIn0pO1xyXG4gICAgfSBlbHNlXHJcbiAgICAvKkBfX1BVUkVfXyovIGlmIChXWCBpbnN0YW5jZW9mIEJsb2IgfHwgV1ggaW5zdGFuY2VvZiBGaWxlKSB7IHJldHVybiBuZXcgV29ya2VyKFVSTC5jcmVhdGVPYmplY3RVUkwoV1gpLCB7dHlwZTogXCJtb2R1bGVcIn0pOyB9XHJcbiAgICAvKkBfX1BVUkVfXyovIHJldHVybiAodHlwZW9mIHNlbGYgIT0gVFMudWRmID8gc2VsZiA6IG51bGwpIGFzIHVua25vd24gYXMgV29ya2VyO1xyXG59XHJcblxyXG4vKkBfX01BTkdMRV9QUk9QX18qLyBcclxuZXhwb3J0IGNvbnN0ICRtb2R1bGVMb2FkZXIgPSBhc3luYyA8VCBleHRlbmRzIHVua25vd24+KG1vZHVsZVNvdXJjZTogc3RyaW5nLCB3b3JrZXJDb2RlOiBzdHJpbmcgPSBcIlwiKTogUHJvbWlzZTxUPiA9PiB7XHJcbiAgICBpZiAoIW1vZHVsZVNvdXJjZSB8fCB0eXBlb2YgbW9kdWxlU291cmNlICE9IFwic3RyaW5nXCIpIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgbW9kdWxlIHNvdXJjZVwiKTtcclxuXHJcbiAgICAvLyBpZiB1cmwgdG9vIGxvbmcsIHVuLWNvbXByZXNzIGNvZGVcclxuICAgIGNvbnN0IHVXb3JrZXIgICA9IGxvYWRXb3JrZXIod29ya2VyQ29kZSk7XHJcbiAgICBjb25zdCBFWENoYW5nZXIgPSAoYXdhaXQgaW1wb3J0KFwiLi4vJGNvcmUkL0xpYnJhcnkvRkxPVy9FeENoYW5nZXJcIikpLmRlZmF1bHQ7XHJcbiAgICBjb25zdCBleENoYW5nZXIgPSBuZXcgRVhDaGFuZ2VyKHVXb3JrZXIpPy5pbml0aWFsaXplPy4oKTtcclxuICAgIGNvbnN0IG1vZHVsZSAgICA9IGF3YWl0IChhd2FpdCBleENoYW5nZXI/LmFjY2Vzcz8uKFwiISFpbXBvcnQhIVwiKSBhcyBhbnkpPy4obW9kdWxlU291cmNlKTtcclxuICAgIHJldHVybiBtb2R1bGU7XHJcbn1cclxuIl19"],"names":["__webpack_require__","moduleId","module","cachedModule","__webpack_module_cache__","undefined","exports","__webpack_modules__","installedChunks","installChunk","ObjectProxy","constructor","handlerUtils","this","access","target","args","$hnd","get","set","has","call","apply","construct","deleteProperty","RemoteReferenceHandler","DataHandler","exChanger","super","$exc","$data","t","cmd","meta","data","exc","then","e","$request","$get","_","ObjectPoolMemberHandler","memoryPool","UUIDMap","wrap","uuid","ExChanger","context","TS","udf","FLOW","console","warn","initialize","importToSelf","Error","$imports","$cd","$mp","$dh","$addHandler","PromiseHandler","$sync","sync","$makePromise","ext","Proxy","$getHandler","error","$act","result","cb","transfer","encoded","encode","callTask","res","decode","$importToUnit","source","importToUnit","$importToSelf","register","object","name","add","type","$node","node","real","doTransfer","$name","esm","AT","Atomics","SharedChannel","$binCoder","sharedBuffer","byteOffset","binCoder","rv","$resolveWith","Uint8Array","rj","waitAuto","timeout","self","document","waitAsync","waitSync","$waitSync","_timeout","binaryData","byteLength","grow","int32","Int32Array","load","store","notify","$initials","$promised","promise","value","async","catch","trace","bind","wait","doOnlyAfterResolve","prototype","bin","HANG_TIMEOUT","PromiseStack","Map","ne","allSettled","Array","from","entries","filter","n","map","v","rjb","why","pm","delete","rvb","hook","key","buffer","setTimeout","cs","bf","SharedArrayBuffer","cr","withResolvers","PM","worker","addEventListener","ev","log","dir","status","shared","handler","syncOrAsync","pass","$r","Set","some","I","reason","message","resolved","Object","assign","default","pair","$args","TypeDetector","detection","a","isArray","ArrayBuffer","$buffer","valid","toString","detectType","organic","indexOf","def","UniversalHandler","dataHandler","htp","local","overlap","wrapMeta","$m","w","pt","hasMemoryBuffer","$encoder","$decoder","$hndr","$typeDetector","all","org","push","toTransfer","_transfer","exists","decoded","$decode","o","$encode","$handler","command","length","splice","$resolver","ref","Reflect","err","_uuid","$deferOp","$wrapPromise","raw","PMS","Promise","MakeReference","fx","stringify","JSON","bindCtx","gt","wrapWeakMap","WeakMap","extract","prepare","$ORG","$exc$","Symbol","$data$","ORG","payload","index","$bindings$","bindWithContext","obj","timers","tmpSet","hold","tmp","deref","FinalizationRegistry","id","force","WeakRef","UUIDv4","crypto","randomUUID","replace","c","getRandomValues","Transferable","MessagePort","ReadableStream","WritableStream","TransformStream","WebTransportReceiveStream","WebTransportSendStream","AudioData","ImageBitmap","VideoFrame","OffscreenCanvas","RTCDataChannel","E","isSymbol","sym","FORBIDDEN_KEYS","META_KEYS","values","wrapExChanger","prop","isPromise","getContext","wModule","mx","webpackAsyncContext","req","resolve","code","keys","webpackEmptyAsyncContext","m","d","definition","defineProperty","enumerable","f","chunkId","reduce","promises","u","hasOwnProperty","r","toStringTag","i","ids","modules","runtime","j","installedChunkData","import","race","altName","src","importContext","moduleLoader","moduleSource","workerCode","uWorker","WX","Worker","URL","canParse","createObjectURL","Blob","File","EXChanger","$moduleLoader"],"sourceRoot":""}